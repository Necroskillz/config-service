package values

import (
	"fmt"

	"github.com/necroskillz/config-service/service"
	"github.com/necroskillz/config-service/views"
	c "github.com/necroskillz/config-service/views/components"
)

type ValueFormData struct {
	views.ViewData
	ServiceVersionID uint
	FeatureVersionID uint
	KeyID            uint
	VariationValueID uint
	Variation        map[string]string
	Properties       []*service.VariationHierarchyProperty

	Value string `form:"value"`
}

templ ValueForm(data ValueFormData) {
	<td class="border px-4 py-2 break-words max-w-[400px]">
		<form id="value-form">
			@c.FormElement("value", "") {
				@c.Input("value", data.Value, c.WithClass(views.ValidationErrorClass(data.ValidationErrors["Value"])))
				@c.ValidationMessage(data.ValidationErrors["Value"])
			}
		</form>
	</td>
	for _, prop := range data.Properties {
		<td class="border px-4 py-2">
			@c.VariationSelect(prop, data.Variation[prop.Name], c.WithAttribute("form", "value-form"))
		</td>
	}
	<td class="border px-4 py-2">
		<div class="flex gap-2">
			if data.VariationValueID == 0 {
				@c.SubmitButton("Add",
					c.WithAttribute("hx-include", "#value-form"),
					c.WithAttribute("hx-post", fmt.Sprintf("/services/%d/features/%d/keys/%d/values", data.ServiceVersionID, data.FeatureVersionID, data.KeyID)),
					c.WithAttribute("hx-target", "#value-matrix"),
					c.WithAttribute("hx-target-422", "#add-row"),
				)
				@c.Button("Cancel", "button", c.WithAttribute("@click", "addValue = false"))
			} else {
				@c.SubmitButton("Save",
					c.WithAttribute("hx-include", "#value-form"),
					c.WithAttribute("hx-put", fmt.Sprintf("/services/%d/features/%d/keys/%d/values/%d", data.ServiceVersionID, data.FeatureVersionID, data.KeyID, data.VariationValueID)),
					c.WithAttribute("hx-target", "#value-matrix"),
					c.WithAttribute("hx-target-422", "#add-row"),
				)
				@c.Button("Cancel", "button", c.WithAttribute("@click", "addValue = false"))
			}
		</div>
	</td>
}
