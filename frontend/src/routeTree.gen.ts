/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as AuthImport } from './routes/_auth'
import { Route as IndexImport } from './routes/index'
import { Route as AuthadminAdminImport } from './routes/_auth/(admin)/admin'
import { Route as AuthservicesServicesIndexImport } from './routes/_auth/(services)/services.index'
import { Route as AuthchangesetsChangesetsIndexImport } from './routes/_auth/(changesets)/changesets.index'
import { Route as AuthusersUsersUserIdImport } from './routes/_auth/(users)/users.$userId'
import { Route as AuthservicesServicesCreateImport } from './routes/_auth/(services)/services.create'
import { Route as AuthchangesetsChangesetsEmptyImport } from './routes/_auth/(changesets)/changesets.empty'
import { Route as AuthchangesetsChangesetsChangesetIdImport } from './routes/_auth/(changesets)/changesets.$changesetId'
import { Route as AuthservicesServicesServiceVersionIdIndexImport } from './routes/_auth/(services)/services.$serviceVersionId.index'
import { Route as AuthservicesServicesServiceVersionIdLinkImport } from './routes/_auth/(services)/services.$serviceVersionId.link'
import { Route as AuthservicesServicesServiceVersionIdEditImport } from './routes/_auth/(services)/services.$serviceVersionId.edit'
import { Route as AuthadminAdminvariationPropertiesVariationPropertiesImport } from './routes/_auth/(admin)/admin.(variation-properties)/variation-properties'
import { Route as AuthadminAdminserviceTypesServiceTypesImport } from './routes/_auth/(admin)/admin.(service-types)/service-types'
import { Route as AuthadminAdminusersUsersIndexImport } from './routes/_auth/(admin)/admin.(users)/users.index'
import { Route as AuthfeaturesServicesServiceVersionIdFeaturesCreateImport } from './routes/_auth/(features)/services.$serviceVersionId.features.create'
import { Route as AuthadminAdminvariationPropertiesVariationPropertiesCreateImport } from './routes/_auth/(admin)/admin.(variation-properties)/variation-properties.create'
import { Route as AuthadminAdminvariationPropertiesVariationPropertiesPropertyIdImport } from './routes/_auth/(admin)/admin.(variation-properties)/variation-properties.$propertyId'
import { Route as AuthadminAdminusersUsersUserIdImport } from './routes/_auth/(admin)/admin.(users)/users.$userId'
import { Route as AuthadminAdminserviceTypesServiceTypesCreateImport } from './routes/_auth/(admin)/admin.(service-types)/service-types.create'
import { Route as AuthadminAdminserviceTypesServiceTypesServiceTypeIdImport } from './routes/_auth/(admin)/admin.(service-types)/service-types.$serviceTypeId'
import { Route as AuthfeaturesServicesServiceVersionIdFeaturesFeatureVersionIdIndexImport } from './routes/_auth/(features)/services.$serviceVersionId.features.$featureVersionId.index'
import { Route as AuthfeaturesServicesServiceVersionIdFeaturesFeatureVersionIdEditImport } from './routes/_auth/(features)/services.$serviceVersionId.features.$featureVersionId.edit'
import { Route as AuthkeysServicesServiceVersionIdFeaturesFeatureVersionIdKeysCreateImport } from './routes/_auth/(keys)/services.$serviceVersionId.features.$featureVersionId.keys.create'
import { Route as AuthkeysServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesImport } from './routes/_auth/(keys)/services.$serviceVersionId.features.$featureVersionId.keys.$keyId.values'
import { Route as AuthkeysServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdEditImport } from './routes/_auth/(keys)/services.$serviceVersionId.features.$featureVersionId.keys.$keyId.edit'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthadminAdminRoute = AuthadminAdminImport.update({
  id: '/(admin)/admin',
  path: '/admin',
  getParentRoute: () => AuthRoute,
} as any)

const AuthservicesServicesIndexRoute = AuthservicesServicesIndexImport.update({
  id: '/(services)/services/',
  path: '/services/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthchangesetsChangesetsIndexRoute =
  AuthchangesetsChangesetsIndexImport.update({
    id: '/(changesets)/changesets/',
    path: '/changesets/',
    getParentRoute: () => AuthRoute,
  } as any)

const AuthusersUsersUserIdRoute = AuthusersUsersUserIdImport.update({
  id: '/(users)/users/$userId',
  path: '/users/$userId',
  getParentRoute: () => AuthRoute,
} as any)

const AuthservicesServicesCreateRoute = AuthservicesServicesCreateImport.update(
  {
    id: '/(services)/services/create',
    path: '/services/create',
    getParentRoute: () => AuthRoute,
  } as any,
)

const AuthchangesetsChangesetsEmptyRoute =
  AuthchangesetsChangesetsEmptyImport.update({
    id: '/(changesets)/changesets/empty',
    path: '/changesets/empty',
    getParentRoute: () => AuthRoute,
  } as any)

const AuthchangesetsChangesetsChangesetIdRoute =
  AuthchangesetsChangesetsChangesetIdImport.update({
    id: '/(changesets)/changesets/$changesetId',
    path: '/changesets/$changesetId',
    getParentRoute: () => AuthRoute,
  } as any)

const AuthservicesServicesServiceVersionIdIndexRoute =
  AuthservicesServicesServiceVersionIdIndexImport.update({
    id: '/(services)/services/$serviceVersionId/',
    path: '/services/$serviceVersionId/',
    getParentRoute: () => AuthRoute,
  } as any)

const AuthservicesServicesServiceVersionIdLinkRoute =
  AuthservicesServicesServiceVersionIdLinkImport.update({
    id: '/(services)/services/$serviceVersionId/link',
    path: '/services/$serviceVersionId/link',
    getParentRoute: () => AuthRoute,
  } as any)

const AuthservicesServicesServiceVersionIdEditRoute =
  AuthservicesServicesServiceVersionIdEditImport.update({
    id: '/(services)/services/$serviceVersionId/edit',
    path: '/services/$serviceVersionId/edit',
    getParentRoute: () => AuthRoute,
  } as any)

const AuthadminAdminvariationPropertiesVariationPropertiesRoute =
  AuthadminAdminvariationPropertiesVariationPropertiesImport.update({
    id: '/(variation-properties)/variation-properties',
    path: '/variation-properties',
    getParentRoute: () => AuthadminAdminRoute,
  } as any)

const AuthadminAdminserviceTypesServiceTypesRoute =
  AuthadminAdminserviceTypesServiceTypesImport.update({
    id: '/(service-types)/service-types',
    path: '/service-types',
    getParentRoute: () => AuthadminAdminRoute,
  } as any)

const AuthadminAdminusersUsersIndexRoute =
  AuthadminAdminusersUsersIndexImport.update({
    id: '/(users)/users/',
    path: '/users/',
    getParentRoute: () => AuthadminAdminRoute,
  } as any)

const AuthfeaturesServicesServiceVersionIdFeaturesCreateRoute =
  AuthfeaturesServicesServiceVersionIdFeaturesCreateImport.update({
    id: '/(features)/services/$serviceVersionId/features/create',
    path: '/services/$serviceVersionId/features/create',
    getParentRoute: () => AuthRoute,
  } as any)

const AuthadminAdminvariationPropertiesVariationPropertiesCreateRoute =
  AuthadminAdminvariationPropertiesVariationPropertiesCreateImport.update({
    id: '/create',
    path: '/create',
    getParentRoute: () =>
      AuthadminAdminvariationPropertiesVariationPropertiesRoute,
  } as any)

const AuthadminAdminvariationPropertiesVariationPropertiesPropertyIdRoute =
  AuthadminAdminvariationPropertiesVariationPropertiesPropertyIdImport.update({
    id: '/$propertyId',
    path: '/$propertyId',
    getParentRoute: () =>
      AuthadminAdminvariationPropertiesVariationPropertiesRoute,
  } as any)

const AuthadminAdminusersUsersUserIdRoute =
  AuthadminAdminusersUsersUserIdImport.update({
    id: '/(users)/users/$userId',
    path: '/users/$userId',
    getParentRoute: () => AuthadminAdminRoute,
  } as any)

const AuthadminAdminserviceTypesServiceTypesCreateRoute =
  AuthadminAdminserviceTypesServiceTypesCreateImport.update({
    id: '/create',
    path: '/create',
    getParentRoute: () => AuthadminAdminserviceTypesServiceTypesRoute,
  } as any)

const AuthadminAdminserviceTypesServiceTypesServiceTypeIdRoute =
  AuthadminAdminserviceTypesServiceTypesServiceTypeIdImport.update({
    id: '/$serviceTypeId',
    path: '/$serviceTypeId',
    getParentRoute: () => AuthadminAdminserviceTypesServiceTypesRoute,
  } as any)

const AuthfeaturesServicesServiceVersionIdFeaturesFeatureVersionIdIndexRoute =
  AuthfeaturesServicesServiceVersionIdFeaturesFeatureVersionIdIndexImport.update(
    {
      id: '/(features)/services/$serviceVersionId/features/$featureVersionId/',
      path: '/services/$serviceVersionId/features/$featureVersionId/',
      getParentRoute: () => AuthRoute,
    } as any,
  )

const AuthfeaturesServicesServiceVersionIdFeaturesFeatureVersionIdEditRoute =
  AuthfeaturesServicesServiceVersionIdFeaturesFeatureVersionIdEditImport.update(
    {
      id: '/(features)/services/$serviceVersionId/features/$featureVersionId/edit',
      path: '/services/$serviceVersionId/features/$featureVersionId/edit',
      getParentRoute: () => AuthRoute,
    } as any,
  )

const AuthkeysServicesServiceVersionIdFeaturesFeatureVersionIdKeysCreateRoute =
  AuthkeysServicesServiceVersionIdFeaturesFeatureVersionIdKeysCreateImport.update(
    {
      id: '/(keys)/services/$serviceVersionId/features/$featureVersionId/keys/create',
      path: '/services/$serviceVersionId/features/$featureVersionId/keys/create',
      getParentRoute: () => AuthRoute,
    } as any,
  )

const AuthkeysServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesRoute =
  AuthkeysServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesImport.update(
    {
      id: '/(keys)/services/$serviceVersionId/features/$featureVersionId/keys/$keyId/values',
      path: '/services/$serviceVersionId/features/$featureVersionId/keys/$keyId/values',
      getParentRoute: () => AuthRoute,
    } as any,
  )

const AuthkeysServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdEditRoute =
  AuthkeysServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdEditImport.update(
    {
      id: '/(keys)/services/$serviceVersionId/features/$featureVersionId/keys/$keyId/edit',
      path: '/services/$serviceVersionId/features/$featureVersionId/keys/$keyId/edit',
      getParentRoute: () => AuthRoute,
    } as any,
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/_auth/(admin)/admin': {
      id: '/_auth/(admin)/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AuthadminAdminImport
      parentRoute: typeof AuthImport
    }
    '/_auth/(changesets)/changesets/$changesetId': {
      id: '/_auth/(changesets)/changesets/$changesetId'
      path: '/changesets/$changesetId'
      fullPath: '/changesets/$changesetId'
      preLoaderRoute: typeof AuthchangesetsChangesetsChangesetIdImport
      parentRoute: typeof AuthImport
    }
    '/_auth/(changesets)/changesets/empty': {
      id: '/_auth/(changesets)/changesets/empty'
      path: '/changesets/empty'
      fullPath: '/changesets/empty'
      preLoaderRoute: typeof AuthchangesetsChangesetsEmptyImport
      parentRoute: typeof AuthImport
    }
    '/_auth/(services)/services/create': {
      id: '/_auth/(services)/services/create'
      path: '/services/create'
      fullPath: '/services/create'
      preLoaderRoute: typeof AuthservicesServicesCreateImport
      parentRoute: typeof AuthImport
    }
    '/_auth/(users)/users/$userId': {
      id: '/_auth/(users)/users/$userId'
      path: '/users/$userId'
      fullPath: '/users/$userId'
      preLoaderRoute: typeof AuthusersUsersUserIdImport
      parentRoute: typeof AuthImport
    }
    '/_auth/(changesets)/changesets/': {
      id: '/_auth/(changesets)/changesets/'
      path: '/changesets'
      fullPath: '/changesets'
      preLoaderRoute: typeof AuthchangesetsChangesetsIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/(services)/services/': {
      id: '/_auth/(services)/services/'
      path: '/services'
      fullPath: '/services'
      preLoaderRoute: typeof AuthservicesServicesIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/(admin)/admin/(service-types)/service-types': {
      id: '/_auth/(admin)/admin/(service-types)/service-types'
      path: '/service-types'
      fullPath: '/admin/service-types'
      preLoaderRoute: typeof AuthadminAdminserviceTypesServiceTypesImport
      parentRoute: typeof AuthadminAdminImport
    }
    '/_auth/(admin)/admin/(variation-properties)/variation-properties': {
      id: '/_auth/(admin)/admin/(variation-properties)/variation-properties'
      path: '/variation-properties'
      fullPath: '/admin/variation-properties'
      preLoaderRoute: typeof AuthadminAdminvariationPropertiesVariationPropertiesImport
      parentRoute: typeof AuthadminAdminImport
    }
    '/_auth/(services)/services/$serviceVersionId/edit': {
      id: '/_auth/(services)/services/$serviceVersionId/edit'
      path: '/services/$serviceVersionId/edit'
      fullPath: '/services/$serviceVersionId/edit'
      preLoaderRoute: typeof AuthservicesServicesServiceVersionIdEditImport
      parentRoute: typeof AuthImport
    }
    '/_auth/(services)/services/$serviceVersionId/link': {
      id: '/_auth/(services)/services/$serviceVersionId/link'
      path: '/services/$serviceVersionId/link'
      fullPath: '/services/$serviceVersionId/link'
      preLoaderRoute: typeof AuthservicesServicesServiceVersionIdLinkImport
      parentRoute: typeof AuthImport
    }
    '/_auth/(services)/services/$serviceVersionId/': {
      id: '/_auth/(services)/services/$serviceVersionId/'
      path: '/services/$serviceVersionId'
      fullPath: '/services/$serviceVersionId'
      preLoaderRoute: typeof AuthservicesServicesServiceVersionIdIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/(admin)/admin/(service-types)/service-types/$serviceTypeId': {
      id: '/_auth/(admin)/admin/(service-types)/service-types/$serviceTypeId'
      path: '/$serviceTypeId'
      fullPath: '/admin/service-types/$serviceTypeId'
      preLoaderRoute: typeof AuthadminAdminserviceTypesServiceTypesServiceTypeIdImport
      parentRoute: typeof AuthadminAdminserviceTypesServiceTypesImport
    }
    '/_auth/(admin)/admin/(service-types)/service-types/create': {
      id: '/_auth/(admin)/admin/(service-types)/service-types/create'
      path: '/create'
      fullPath: '/admin/service-types/create'
      preLoaderRoute: typeof AuthadminAdminserviceTypesServiceTypesCreateImport
      parentRoute: typeof AuthadminAdminserviceTypesServiceTypesImport
    }
    '/_auth/(admin)/admin/(users)/users/$userId': {
      id: '/_auth/(admin)/admin/(users)/users/$userId'
      path: '/users/$userId'
      fullPath: '/admin/users/$userId'
      preLoaderRoute: typeof AuthadminAdminusersUsersUserIdImport
      parentRoute: typeof AuthadminAdminImport
    }
    '/_auth/(admin)/admin/(variation-properties)/variation-properties/$propertyId': {
      id: '/_auth/(admin)/admin/(variation-properties)/variation-properties/$propertyId'
      path: '/$propertyId'
      fullPath: '/admin/variation-properties/$propertyId'
      preLoaderRoute: typeof AuthadminAdminvariationPropertiesVariationPropertiesPropertyIdImport
      parentRoute: typeof AuthadminAdminvariationPropertiesVariationPropertiesImport
    }
    '/_auth/(admin)/admin/(variation-properties)/variation-properties/create': {
      id: '/_auth/(admin)/admin/(variation-properties)/variation-properties/create'
      path: '/create'
      fullPath: '/admin/variation-properties/create'
      preLoaderRoute: typeof AuthadminAdminvariationPropertiesVariationPropertiesCreateImport
      parentRoute: typeof AuthadminAdminvariationPropertiesVariationPropertiesImport
    }
    '/_auth/(features)/services/$serviceVersionId/features/create': {
      id: '/_auth/(features)/services/$serviceVersionId/features/create'
      path: '/services/$serviceVersionId/features/create'
      fullPath: '/services/$serviceVersionId/features/create'
      preLoaderRoute: typeof AuthfeaturesServicesServiceVersionIdFeaturesCreateImport
      parentRoute: typeof AuthImport
    }
    '/_auth/(admin)/admin/(users)/users/': {
      id: '/_auth/(admin)/admin/(users)/users/'
      path: '/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AuthadminAdminusersUsersIndexImport
      parentRoute: typeof AuthadminAdminImport
    }
    '/_auth/(features)/services/$serviceVersionId/features/$featureVersionId/edit': {
      id: '/_auth/(features)/services/$serviceVersionId/features/$featureVersionId/edit'
      path: '/services/$serviceVersionId/features/$featureVersionId/edit'
      fullPath: '/services/$serviceVersionId/features/$featureVersionId/edit'
      preLoaderRoute: typeof AuthfeaturesServicesServiceVersionIdFeaturesFeatureVersionIdEditImport
      parentRoute: typeof AuthImport
    }
    '/_auth/(features)/services/$serviceVersionId/features/$featureVersionId/': {
      id: '/_auth/(features)/services/$serviceVersionId/features/$featureVersionId/'
      path: '/services/$serviceVersionId/features/$featureVersionId'
      fullPath: '/services/$serviceVersionId/features/$featureVersionId'
      preLoaderRoute: typeof AuthfeaturesServicesServiceVersionIdFeaturesFeatureVersionIdIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/(keys)/services/$serviceVersionId/features/$featureVersionId/keys/create': {
      id: '/_auth/(keys)/services/$serviceVersionId/features/$featureVersionId/keys/create'
      path: '/services/$serviceVersionId/features/$featureVersionId/keys/create'
      fullPath: '/services/$serviceVersionId/features/$featureVersionId/keys/create'
      preLoaderRoute: typeof AuthkeysServicesServiceVersionIdFeaturesFeatureVersionIdKeysCreateImport
      parentRoute: typeof AuthImport
    }
    '/_auth/(keys)/services/$serviceVersionId/features/$featureVersionId/keys/$keyId/edit': {
      id: '/_auth/(keys)/services/$serviceVersionId/features/$featureVersionId/keys/$keyId/edit'
      path: '/services/$serviceVersionId/features/$featureVersionId/keys/$keyId/edit'
      fullPath: '/services/$serviceVersionId/features/$featureVersionId/keys/$keyId/edit'
      preLoaderRoute: typeof AuthkeysServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdEditImport
      parentRoute: typeof AuthImport
    }
    '/_auth/(keys)/services/$serviceVersionId/features/$featureVersionId/keys/$keyId/values': {
      id: '/_auth/(keys)/services/$serviceVersionId/features/$featureVersionId/keys/$keyId/values'
      path: '/services/$serviceVersionId/features/$featureVersionId/keys/$keyId/values'
      fullPath: '/services/$serviceVersionId/features/$featureVersionId/keys/$keyId/values'
      preLoaderRoute: typeof AuthkeysServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

interface AuthadminAdminserviceTypesServiceTypesRouteChildren {
  AuthadminAdminserviceTypesServiceTypesServiceTypeIdRoute: typeof AuthadminAdminserviceTypesServiceTypesServiceTypeIdRoute
  AuthadminAdminserviceTypesServiceTypesCreateRoute: typeof AuthadminAdminserviceTypesServiceTypesCreateRoute
}

const AuthadminAdminserviceTypesServiceTypesRouteChildren: AuthadminAdminserviceTypesServiceTypesRouteChildren =
  {
    AuthadminAdminserviceTypesServiceTypesServiceTypeIdRoute:
      AuthadminAdminserviceTypesServiceTypesServiceTypeIdRoute,
    AuthadminAdminserviceTypesServiceTypesCreateRoute:
      AuthadminAdminserviceTypesServiceTypesCreateRoute,
  }

const AuthadminAdminserviceTypesServiceTypesRouteWithChildren =
  AuthadminAdminserviceTypesServiceTypesRoute._addFileChildren(
    AuthadminAdminserviceTypesServiceTypesRouteChildren,
  )

interface AuthadminAdminvariationPropertiesVariationPropertiesRouteChildren {
  AuthadminAdminvariationPropertiesVariationPropertiesPropertyIdRoute: typeof AuthadminAdminvariationPropertiesVariationPropertiesPropertyIdRoute
  AuthadminAdminvariationPropertiesVariationPropertiesCreateRoute: typeof AuthadminAdminvariationPropertiesVariationPropertiesCreateRoute
}

const AuthadminAdminvariationPropertiesVariationPropertiesRouteChildren: AuthadminAdminvariationPropertiesVariationPropertiesRouteChildren =
  {
    AuthadminAdminvariationPropertiesVariationPropertiesPropertyIdRoute:
      AuthadminAdminvariationPropertiesVariationPropertiesPropertyIdRoute,
    AuthadminAdminvariationPropertiesVariationPropertiesCreateRoute:
      AuthadminAdminvariationPropertiesVariationPropertiesCreateRoute,
  }

const AuthadminAdminvariationPropertiesVariationPropertiesRouteWithChildren =
  AuthadminAdminvariationPropertiesVariationPropertiesRoute._addFileChildren(
    AuthadminAdminvariationPropertiesVariationPropertiesRouteChildren,
  )

interface AuthadminAdminRouteChildren {
  AuthadminAdminserviceTypesServiceTypesRoute: typeof AuthadminAdminserviceTypesServiceTypesRouteWithChildren
  AuthadminAdminvariationPropertiesVariationPropertiesRoute: typeof AuthadminAdminvariationPropertiesVariationPropertiesRouteWithChildren
  AuthadminAdminusersUsersUserIdRoute: typeof AuthadminAdminusersUsersUserIdRoute
  AuthadminAdminusersUsersIndexRoute: typeof AuthadminAdminusersUsersIndexRoute
}

const AuthadminAdminRouteChildren: AuthadminAdminRouteChildren = {
  AuthadminAdminserviceTypesServiceTypesRoute:
    AuthadminAdminserviceTypesServiceTypesRouteWithChildren,
  AuthadminAdminvariationPropertiesVariationPropertiesRoute:
    AuthadminAdminvariationPropertiesVariationPropertiesRouteWithChildren,
  AuthadminAdminusersUsersUserIdRoute: AuthadminAdminusersUsersUserIdRoute,
  AuthadminAdminusersUsersIndexRoute: AuthadminAdminusersUsersIndexRoute,
}

const AuthadminAdminRouteWithChildren = AuthadminAdminRoute._addFileChildren(
  AuthadminAdminRouteChildren,
)

interface AuthRouteChildren {
  AuthadminAdminRoute: typeof AuthadminAdminRouteWithChildren
  AuthchangesetsChangesetsChangesetIdRoute: typeof AuthchangesetsChangesetsChangesetIdRoute
  AuthchangesetsChangesetsEmptyRoute: typeof AuthchangesetsChangesetsEmptyRoute
  AuthservicesServicesCreateRoute: typeof AuthservicesServicesCreateRoute
  AuthusersUsersUserIdRoute: typeof AuthusersUsersUserIdRoute
  AuthchangesetsChangesetsIndexRoute: typeof AuthchangesetsChangesetsIndexRoute
  AuthservicesServicesIndexRoute: typeof AuthservicesServicesIndexRoute
  AuthservicesServicesServiceVersionIdEditRoute: typeof AuthservicesServicesServiceVersionIdEditRoute
  AuthservicesServicesServiceVersionIdLinkRoute: typeof AuthservicesServicesServiceVersionIdLinkRoute
  AuthservicesServicesServiceVersionIdIndexRoute: typeof AuthservicesServicesServiceVersionIdIndexRoute
  AuthfeaturesServicesServiceVersionIdFeaturesCreateRoute: typeof AuthfeaturesServicesServiceVersionIdFeaturesCreateRoute
  AuthfeaturesServicesServiceVersionIdFeaturesFeatureVersionIdEditRoute: typeof AuthfeaturesServicesServiceVersionIdFeaturesFeatureVersionIdEditRoute
  AuthfeaturesServicesServiceVersionIdFeaturesFeatureVersionIdIndexRoute: typeof AuthfeaturesServicesServiceVersionIdFeaturesFeatureVersionIdIndexRoute
  AuthkeysServicesServiceVersionIdFeaturesFeatureVersionIdKeysCreateRoute: typeof AuthkeysServicesServiceVersionIdFeaturesFeatureVersionIdKeysCreateRoute
  AuthkeysServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdEditRoute: typeof AuthkeysServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdEditRoute
  AuthkeysServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesRoute: typeof AuthkeysServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthadminAdminRoute: AuthadminAdminRouteWithChildren,
  AuthchangesetsChangesetsChangesetIdRoute:
    AuthchangesetsChangesetsChangesetIdRoute,
  AuthchangesetsChangesetsEmptyRoute: AuthchangesetsChangesetsEmptyRoute,
  AuthservicesServicesCreateRoute: AuthservicesServicesCreateRoute,
  AuthusersUsersUserIdRoute: AuthusersUsersUserIdRoute,
  AuthchangesetsChangesetsIndexRoute: AuthchangesetsChangesetsIndexRoute,
  AuthservicesServicesIndexRoute: AuthservicesServicesIndexRoute,
  AuthservicesServicesServiceVersionIdEditRoute:
    AuthservicesServicesServiceVersionIdEditRoute,
  AuthservicesServicesServiceVersionIdLinkRoute:
    AuthservicesServicesServiceVersionIdLinkRoute,
  AuthservicesServicesServiceVersionIdIndexRoute:
    AuthservicesServicesServiceVersionIdIndexRoute,
  AuthfeaturesServicesServiceVersionIdFeaturesCreateRoute:
    AuthfeaturesServicesServiceVersionIdFeaturesCreateRoute,
  AuthfeaturesServicesServiceVersionIdFeaturesFeatureVersionIdEditRoute:
    AuthfeaturesServicesServiceVersionIdFeaturesFeatureVersionIdEditRoute,
  AuthfeaturesServicesServiceVersionIdFeaturesFeatureVersionIdIndexRoute:
    AuthfeaturesServicesServiceVersionIdFeaturesFeatureVersionIdIndexRoute,
  AuthkeysServicesServiceVersionIdFeaturesFeatureVersionIdKeysCreateRoute:
    AuthkeysServicesServiceVersionIdFeaturesFeatureVersionIdKeysCreateRoute,
  AuthkeysServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdEditRoute:
    AuthkeysServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdEditRoute,
  AuthkeysServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesRoute:
    AuthkeysServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthRouteWithChildren
  '/login': typeof LoginRoute
  '/admin': typeof AuthadminAdminRouteWithChildren
  '/changesets/$changesetId': typeof AuthchangesetsChangesetsChangesetIdRoute
  '/changesets/empty': typeof AuthchangesetsChangesetsEmptyRoute
  '/services/create': typeof AuthservicesServicesCreateRoute
  '/users/$userId': typeof AuthusersUsersUserIdRoute
  '/changesets': typeof AuthchangesetsChangesetsIndexRoute
  '/services': typeof AuthservicesServicesIndexRoute
  '/admin/service-types': typeof AuthadminAdminserviceTypesServiceTypesRouteWithChildren
  '/admin/variation-properties': typeof AuthadminAdminvariationPropertiesVariationPropertiesRouteWithChildren
  '/services/$serviceVersionId/edit': typeof AuthservicesServicesServiceVersionIdEditRoute
  '/services/$serviceVersionId/link': typeof AuthservicesServicesServiceVersionIdLinkRoute
  '/services/$serviceVersionId': typeof AuthservicesServicesServiceVersionIdIndexRoute
  '/admin/service-types/$serviceTypeId': typeof AuthadminAdminserviceTypesServiceTypesServiceTypeIdRoute
  '/admin/service-types/create': typeof AuthadminAdminserviceTypesServiceTypesCreateRoute
  '/admin/users/$userId': typeof AuthadminAdminusersUsersUserIdRoute
  '/admin/variation-properties/$propertyId': typeof AuthadminAdminvariationPropertiesVariationPropertiesPropertyIdRoute
  '/admin/variation-properties/create': typeof AuthadminAdminvariationPropertiesVariationPropertiesCreateRoute
  '/services/$serviceVersionId/features/create': typeof AuthfeaturesServicesServiceVersionIdFeaturesCreateRoute
  '/admin/users': typeof AuthadminAdminusersUsersIndexRoute
  '/services/$serviceVersionId/features/$featureVersionId/edit': typeof AuthfeaturesServicesServiceVersionIdFeaturesFeatureVersionIdEditRoute
  '/services/$serviceVersionId/features/$featureVersionId': typeof AuthfeaturesServicesServiceVersionIdFeaturesFeatureVersionIdIndexRoute
  '/services/$serviceVersionId/features/$featureVersionId/keys/create': typeof AuthkeysServicesServiceVersionIdFeaturesFeatureVersionIdKeysCreateRoute
  '/services/$serviceVersionId/features/$featureVersionId/keys/$keyId/edit': typeof AuthkeysServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdEditRoute
  '/services/$serviceVersionId/features/$featureVersionId/keys/$keyId/values': typeof AuthkeysServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthRouteWithChildren
  '/login': typeof LoginRoute
  '/admin': typeof AuthadminAdminRouteWithChildren
  '/changesets/$changesetId': typeof AuthchangesetsChangesetsChangesetIdRoute
  '/changesets/empty': typeof AuthchangesetsChangesetsEmptyRoute
  '/services/create': typeof AuthservicesServicesCreateRoute
  '/users/$userId': typeof AuthusersUsersUserIdRoute
  '/changesets': typeof AuthchangesetsChangesetsIndexRoute
  '/services': typeof AuthservicesServicesIndexRoute
  '/admin/service-types': typeof AuthadminAdminserviceTypesServiceTypesRouteWithChildren
  '/admin/variation-properties': typeof AuthadminAdminvariationPropertiesVariationPropertiesRouteWithChildren
  '/services/$serviceVersionId/edit': typeof AuthservicesServicesServiceVersionIdEditRoute
  '/services/$serviceVersionId/link': typeof AuthservicesServicesServiceVersionIdLinkRoute
  '/services/$serviceVersionId': typeof AuthservicesServicesServiceVersionIdIndexRoute
  '/admin/service-types/$serviceTypeId': typeof AuthadminAdminserviceTypesServiceTypesServiceTypeIdRoute
  '/admin/service-types/create': typeof AuthadminAdminserviceTypesServiceTypesCreateRoute
  '/admin/users/$userId': typeof AuthadminAdminusersUsersUserIdRoute
  '/admin/variation-properties/$propertyId': typeof AuthadminAdminvariationPropertiesVariationPropertiesPropertyIdRoute
  '/admin/variation-properties/create': typeof AuthadminAdminvariationPropertiesVariationPropertiesCreateRoute
  '/services/$serviceVersionId/features/create': typeof AuthfeaturesServicesServiceVersionIdFeaturesCreateRoute
  '/admin/users': typeof AuthadminAdminusersUsersIndexRoute
  '/services/$serviceVersionId/features/$featureVersionId/edit': typeof AuthfeaturesServicesServiceVersionIdFeaturesFeatureVersionIdEditRoute
  '/services/$serviceVersionId/features/$featureVersionId': typeof AuthfeaturesServicesServiceVersionIdFeaturesFeatureVersionIdIndexRoute
  '/services/$serviceVersionId/features/$featureVersionId/keys/create': typeof AuthkeysServicesServiceVersionIdFeaturesFeatureVersionIdKeysCreateRoute
  '/services/$serviceVersionId/features/$featureVersionId/keys/$keyId/edit': typeof AuthkeysServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdEditRoute
  '/services/$serviceVersionId/features/$featureVersionId/keys/$keyId/values': typeof AuthkeysServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteWithChildren
  '/login': typeof LoginRoute
  '/_auth/(admin)/admin': typeof AuthadminAdminRouteWithChildren
  '/_auth/(changesets)/changesets/$changesetId': typeof AuthchangesetsChangesetsChangesetIdRoute
  '/_auth/(changesets)/changesets/empty': typeof AuthchangesetsChangesetsEmptyRoute
  '/_auth/(services)/services/create': typeof AuthservicesServicesCreateRoute
  '/_auth/(users)/users/$userId': typeof AuthusersUsersUserIdRoute
  '/_auth/(changesets)/changesets/': typeof AuthchangesetsChangesetsIndexRoute
  '/_auth/(services)/services/': typeof AuthservicesServicesIndexRoute
  '/_auth/(admin)/admin/(service-types)/service-types': typeof AuthadminAdminserviceTypesServiceTypesRouteWithChildren
  '/_auth/(admin)/admin/(variation-properties)/variation-properties': typeof AuthadminAdminvariationPropertiesVariationPropertiesRouteWithChildren
  '/_auth/(services)/services/$serviceVersionId/edit': typeof AuthservicesServicesServiceVersionIdEditRoute
  '/_auth/(services)/services/$serviceVersionId/link': typeof AuthservicesServicesServiceVersionIdLinkRoute
  '/_auth/(services)/services/$serviceVersionId/': typeof AuthservicesServicesServiceVersionIdIndexRoute
  '/_auth/(admin)/admin/(service-types)/service-types/$serviceTypeId': typeof AuthadminAdminserviceTypesServiceTypesServiceTypeIdRoute
  '/_auth/(admin)/admin/(service-types)/service-types/create': typeof AuthadminAdminserviceTypesServiceTypesCreateRoute
  '/_auth/(admin)/admin/(users)/users/$userId': typeof AuthadminAdminusersUsersUserIdRoute
  '/_auth/(admin)/admin/(variation-properties)/variation-properties/$propertyId': typeof AuthadminAdminvariationPropertiesVariationPropertiesPropertyIdRoute
  '/_auth/(admin)/admin/(variation-properties)/variation-properties/create': typeof AuthadminAdminvariationPropertiesVariationPropertiesCreateRoute
  '/_auth/(features)/services/$serviceVersionId/features/create': typeof AuthfeaturesServicesServiceVersionIdFeaturesCreateRoute
  '/_auth/(admin)/admin/(users)/users/': typeof AuthadminAdminusersUsersIndexRoute
  '/_auth/(features)/services/$serviceVersionId/features/$featureVersionId/edit': typeof AuthfeaturesServicesServiceVersionIdFeaturesFeatureVersionIdEditRoute
  '/_auth/(features)/services/$serviceVersionId/features/$featureVersionId/': typeof AuthfeaturesServicesServiceVersionIdFeaturesFeatureVersionIdIndexRoute
  '/_auth/(keys)/services/$serviceVersionId/features/$featureVersionId/keys/create': typeof AuthkeysServicesServiceVersionIdFeaturesFeatureVersionIdKeysCreateRoute
  '/_auth/(keys)/services/$serviceVersionId/features/$featureVersionId/keys/$keyId/edit': typeof AuthkeysServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdEditRoute
  '/_auth/(keys)/services/$serviceVersionId/features/$featureVersionId/keys/$keyId/values': typeof AuthkeysServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/login'
    | '/admin'
    | '/changesets/$changesetId'
    | '/changesets/empty'
    | '/services/create'
    | '/users/$userId'
    | '/changesets'
    | '/services'
    | '/admin/service-types'
    | '/admin/variation-properties'
    | '/services/$serviceVersionId/edit'
    | '/services/$serviceVersionId/link'
    | '/services/$serviceVersionId'
    | '/admin/service-types/$serviceTypeId'
    | '/admin/service-types/create'
    | '/admin/users/$userId'
    | '/admin/variation-properties/$propertyId'
    | '/admin/variation-properties/create'
    | '/services/$serviceVersionId/features/create'
    | '/admin/users'
    | '/services/$serviceVersionId/features/$featureVersionId/edit'
    | '/services/$serviceVersionId/features/$featureVersionId'
    | '/services/$serviceVersionId/features/$featureVersionId/keys/create'
    | '/services/$serviceVersionId/features/$featureVersionId/keys/$keyId/edit'
    | '/services/$serviceVersionId/features/$featureVersionId/keys/$keyId/values'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/login'
    | '/admin'
    | '/changesets/$changesetId'
    | '/changesets/empty'
    | '/services/create'
    | '/users/$userId'
    | '/changesets'
    | '/services'
    | '/admin/service-types'
    | '/admin/variation-properties'
    | '/services/$serviceVersionId/edit'
    | '/services/$serviceVersionId/link'
    | '/services/$serviceVersionId'
    | '/admin/service-types/$serviceTypeId'
    | '/admin/service-types/create'
    | '/admin/users/$userId'
    | '/admin/variation-properties/$propertyId'
    | '/admin/variation-properties/create'
    | '/services/$serviceVersionId/features/create'
    | '/admin/users'
    | '/services/$serviceVersionId/features/$featureVersionId/edit'
    | '/services/$serviceVersionId/features/$featureVersionId'
    | '/services/$serviceVersionId/features/$featureVersionId/keys/create'
    | '/services/$serviceVersionId/features/$featureVersionId/keys/$keyId/edit'
    | '/services/$serviceVersionId/features/$featureVersionId/keys/$keyId/values'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/login'
    | '/_auth/(admin)/admin'
    | '/_auth/(changesets)/changesets/$changesetId'
    | '/_auth/(changesets)/changesets/empty'
    | '/_auth/(services)/services/create'
    | '/_auth/(users)/users/$userId'
    | '/_auth/(changesets)/changesets/'
    | '/_auth/(services)/services/'
    | '/_auth/(admin)/admin/(service-types)/service-types'
    | '/_auth/(admin)/admin/(variation-properties)/variation-properties'
    | '/_auth/(services)/services/$serviceVersionId/edit'
    | '/_auth/(services)/services/$serviceVersionId/link'
    | '/_auth/(services)/services/$serviceVersionId/'
    | '/_auth/(admin)/admin/(service-types)/service-types/$serviceTypeId'
    | '/_auth/(admin)/admin/(service-types)/service-types/create'
    | '/_auth/(admin)/admin/(users)/users/$userId'
    | '/_auth/(admin)/admin/(variation-properties)/variation-properties/$propertyId'
    | '/_auth/(admin)/admin/(variation-properties)/variation-properties/create'
    | '/_auth/(features)/services/$serviceVersionId/features/create'
    | '/_auth/(admin)/admin/(users)/users/'
    | '/_auth/(features)/services/$serviceVersionId/features/$featureVersionId/edit'
    | '/_auth/(features)/services/$serviceVersionId/features/$featureVersionId/'
    | '/_auth/(keys)/services/$serviceVersionId/features/$featureVersionId/keys/create'
    | '/_auth/(keys)/services/$serviceVersionId/features/$featureVersionId/keys/$keyId/edit'
    | '/_auth/(keys)/services/$serviceVersionId/features/$featureVersionId/keys/$keyId/values'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  LoginRoute: typeof LoginRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  LoginRoute: LoginRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/login"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/(admin)/admin",
        "/_auth/(changesets)/changesets/$changesetId",
        "/_auth/(changesets)/changesets/empty",
        "/_auth/(services)/services/create",
        "/_auth/(users)/users/$userId",
        "/_auth/(changesets)/changesets/",
        "/_auth/(services)/services/",
        "/_auth/(services)/services/$serviceVersionId/edit",
        "/_auth/(services)/services/$serviceVersionId/link",
        "/_auth/(services)/services/$serviceVersionId/",
        "/_auth/(features)/services/$serviceVersionId/features/create",
        "/_auth/(features)/services/$serviceVersionId/features/$featureVersionId/edit",
        "/_auth/(features)/services/$serviceVersionId/features/$featureVersionId/",
        "/_auth/(keys)/services/$serviceVersionId/features/$featureVersionId/keys/create",
        "/_auth/(keys)/services/$serviceVersionId/features/$featureVersionId/keys/$keyId/edit",
        "/_auth/(keys)/services/$serviceVersionId/features/$featureVersionId/keys/$keyId/values"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/_auth/(admin)/admin": {
      "filePath": "_auth/(admin)/admin.tsx",
      "parent": "/_auth",
      "children": [
        "/_auth/(admin)/admin/(service-types)/service-types",
        "/_auth/(admin)/admin/(variation-properties)/variation-properties",
        "/_auth/(admin)/admin/(users)/users/$userId",
        "/_auth/(admin)/admin/(users)/users/"
      ]
    },
    "/_auth/(changesets)/changesets/$changesetId": {
      "filePath": "_auth/(changesets)/changesets.$changesetId.tsx",
      "parent": "/_auth"
    },
    "/_auth/(changesets)/changesets/empty": {
      "filePath": "_auth/(changesets)/changesets.empty.tsx",
      "parent": "/_auth"
    },
    "/_auth/(services)/services/create": {
      "filePath": "_auth/(services)/services.create.tsx",
      "parent": "/_auth"
    },
    "/_auth/(users)/users/$userId": {
      "filePath": "_auth/(users)/users.$userId.tsx",
      "parent": "/_auth"
    },
    "/_auth/(changesets)/changesets/": {
      "filePath": "_auth/(changesets)/changesets.index.tsx",
      "parent": "/_auth"
    },
    "/_auth/(services)/services/": {
      "filePath": "_auth/(services)/services.index.tsx",
      "parent": "/_auth"
    },
    "/_auth/(admin)/admin/(service-types)/service-types": {
      "filePath": "_auth/(admin)/admin.(service-types)/service-types.tsx",
      "parent": "/_auth/(admin)/admin",
      "children": [
        "/_auth/(admin)/admin/(service-types)/service-types/$serviceTypeId",
        "/_auth/(admin)/admin/(service-types)/service-types/create"
      ]
    },
    "/_auth/(admin)/admin/(variation-properties)/variation-properties": {
      "filePath": "_auth/(admin)/admin.(variation-properties)/variation-properties.tsx",
      "parent": "/_auth/(admin)/admin",
      "children": [
        "/_auth/(admin)/admin/(variation-properties)/variation-properties/$propertyId",
        "/_auth/(admin)/admin/(variation-properties)/variation-properties/create"
      ]
    },
    "/_auth/(services)/services/$serviceVersionId/edit": {
      "filePath": "_auth/(services)/services.$serviceVersionId.edit.tsx",
      "parent": "/_auth"
    },
    "/_auth/(services)/services/$serviceVersionId/link": {
      "filePath": "_auth/(services)/services.$serviceVersionId.link.tsx",
      "parent": "/_auth"
    },
    "/_auth/(services)/services/$serviceVersionId/": {
      "filePath": "_auth/(services)/services.$serviceVersionId.index.tsx",
      "parent": "/_auth"
    },
    "/_auth/(admin)/admin/(service-types)/service-types/$serviceTypeId": {
      "filePath": "_auth/(admin)/admin.(service-types)/service-types.$serviceTypeId.tsx",
      "parent": "/_auth/(admin)/admin/(service-types)/service-types"
    },
    "/_auth/(admin)/admin/(service-types)/service-types/create": {
      "filePath": "_auth/(admin)/admin.(service-types)/service-types.create.tsx",
      "parent": "/_auth/(admin)/admin/(service-types)/service-types"
    },
    "/_auth/(admin)/admin/(users)/users/$userId": {
      "filePath": "_auth/(admin)/admin.(users)/users.$userId.tsx",
      "parent": "/_auth/(admin)/admin"
    },
    "/_auth/(admin)/admin/(variation-properties)/variation-properties/$propertyId": {
      "filePath": "_auth/(admin)/admin.(variation-properties)/variation-properties.$propertyId.tsx",
      "parent": "/_auth/(admin)/admin/(variation-properties)/variation-properties"
    },
    "/_auth/(admin)/admin/(variation-properties)/variation-properties/create": {
      "filePath": "_auth/(admin)/admin.(variation-properties)/variation-properties.create.tsx",
      "parent": "/_auth/(admin)/admin/(variation-properties)/variation-properties"
    },
    "/_auth/(features)/services/$serviceVersionId/features/create": {
      "filePath": "_auth/(features)/services.$serviceVersionId.features.create.tsx",
      "parent": "/_auth"
    },
    "/_auth/(admin)/admin/(users)/users/": {
      "filePath": "_auth/(admin)/admin.(users)/users.index.tsx",
      "parent": "/_auth/(admin)/admin"
    },
    "/_auth/(features)/services/$serviceVersionId/features/$featureVersionId/edit": {
      "filePath": "_auth/(features)/services.$serviceVersionId.features.$featureVersionId.edit.tsx",
      "parent": "/_auth"
    },
    "/_auth/(features)/services/$serviceVersionId/features/$featureVersionId/": {
      "filePath": "_auth/(features)/services.$serviceVersionId.features.$featureVersionId.index.tsx",
      "parent": "/_auth"
    },
    "/_auth/(keys)/services/$serviceVersionId/features/$featureVersionId/keys/create": {
      "filePath": "_auth/(keys)/services.$serviceVersionId.features.$featureVersionId.keys.create.tsx",
      "parent": "/_auth"
    },
    "/_auth/(keys)/services/$serviceVersionId/features/$featureVersionId/keys/$keyId/edit": {
      "filePath": "_auth/(keys)/services.$serviceVersionId.features.$featureVersionId.keys.$keyId.edit.tsx",
      "parent": "/_auth"
    },
    "/_auth/(keys)/services/$serviceVersionId/features/$featureVersionId/keys/$keyId/values": {
      "filePath": "_auth/(keys)/services.$serviceVersionId.features.$featureVersionId.keys.$keyId.values.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
