/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '~/axios'
import type { UseMutationOptions, QueryClient } from '@tanstack/react-query'
import type {
  PostMembershipPermissionsMutationRequest,
  PostMembershipPermissionsMutationResponse,
  PostMembershipPermissions400,
  PostMembershipPermissions401,
  PostMembershipPermissions403,
  PostMembershipPermissions404,
  PostMembershipPermissions422,
  PostMembershipPermissions500,
} from '../types/PostMembershipPermissions.ts'
import type { RequestConfig, ResponseErrorConfig } from '~/axios'
import { useMutation } from '@tanstack/react-query'

export const postMembershipPermissionsMutationKey = () => [{ url: '/membership/permissions' }] as const

export type PostMembershipPermissionsMutationKey = ReturnType<typeof postMembershipPermissionsMutationKey>

/**
 * @description Add a permission to a user or group
 * @summary Add a permission
 * {@link /membership/permissions}
 */
export async function postMembershipPermissions(
  data: PostMembershipPermissionsMutationRequest,
  config: Partial<RequestConfig<PostMembershipPermissionsMutationRequest>> & { client?: typeof client } = {},
) {
  const { client: request = client, ...requestConfig } = config

  const res = await request<
    PostMembershipPermissionsMutationResponse,
    ResponseErrorConfig<
      | PostMembershipPermissions400
      | PostMembershipPermissions401
      | PostMembershipPermissions403
      | PostMembershipPermissions404
      | PostMembershipPermissions422
      | PostMembershipPermissions500
    >,
    PostMembershipPermissionsMutationRequest
  >({ method: 'POST', url: `/membership/permissions`, data, ...requestConfig })
  return res.data
}

/**
 * @description Add a permission to a user or group
 * @summary Add a permission
 * {@link /membership/permissions}
 */
export function usePostMembershipPermissions<TContext>(
  options: {
    mutation?: UseMutationOptions<
      PostMembershipPermissionsMutationResponse,
      ResponseErrorConfig<
        | PostMembershipPermissions400
        | PostMembershipPermissions401
        | PostMembershipPermissions403
        | PostMembershipPermissions404
        | PostMembershipPermissions422
        | PostMembershipPermissions500
      >,
      { data: PostMembershipPermissionsMutationRequest },
      TContext
    > & { client?: QueryClient }
    client?: Partial<RequestConfig<PostMembershipPermissionsMutationRequest>> & { client?: typeof client }
  } = {},
) {
  const { mutation = {}, client: config = {} } = options ?? {}
  const { client: queryClient, ...mutationOptions } = mutation
  const mutationKey = mutationOptions.mutationKey ?? postMembershipPermissionsMutationKey()

  return useMutation<
    PostMembershipPermissionsMutationResponse,
    ResponseErrorConfig<
      | PostMembershipPermissions400
      | PostMembershipPermissions401
      | PostMembershipPermissions403
      | PostMembershipPermissions404
      | PostMembershipPermissions422
      | PostMembershipPermissions500
    >,
    { data: PostMembershipPermissionsMutationRequest },
    TContext
  >(
    {
      mutationFn: async ({ data }) => {
        return postMembershipPermissions(data, config)
      },
      mutationKey,
      ...mutationOptions,
    },
    queryClient,
  )
}