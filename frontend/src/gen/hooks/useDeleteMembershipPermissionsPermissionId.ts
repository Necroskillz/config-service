/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '~/axios'
import type { UseMutationOptions, QueryClient } from '@tanstack/react-query'
import type {
  DeleteMembershipPermissionsPermissionIdMutationResponse,
  DeleteMembershipPermissionsPermissionIdPathParams,
  DeleteMembershipPermissionsPermissionId400,
  DeleteMembershipPermissionsPermissionId401,
  DeleteMembershipPermissionsPermissionId403,
  DeleteMembershipPermissionsPermissionId404,
  DeleteMembershipPermissionsPermissionId500,
} from '../types/DeleteMembershipPermissionsPermissionId.ts'
import type { RequestConfig, ResponseErrorConfig } from '~/axios'
import { useMutation } from '@tanstack/react-query'

export const deleteMembershipPermissionsPermissionIdMutationKey = () => [{ url: '/membership/permissions/{permission_id}' }] as const

export type DeleteMembershipPermissionsPermissionIdMutationKey = ReturnType<typeof deleteMembershipPermissionsPermissionIdMutationKey>

/**
 * @description Remove a permission from a group
 * @summary Remove a permission from a group
 * {@link /membership/permissions/:permission_id}
 */
export async function deleteMembershipPermissionsPermissionId(
  permission_id: DeleteMembershipPermissionsPermissionIdPathParams['permission_id'],
  config: Partial<RequestConfig> & { client?: typeof client } = {},
) {
  const { client: request = client, ...requestConfig } = config

  const res = await request<
    DeleteMembershipPermissionsPermissionIdMutationResponse,
    ResponseErrorConfig<
      | DeleteMembershipPermissionsPermissionId400
      | DeleteMembershipPermissionsPermissionId401
      | DeleteMembershipPermissionsPermissionId403
      | DeleteMembershipPermissionsPermissionId404
      | DeleteMembershipPermissionsPermissionId500
    >,
    unknown
  >({ method: 'DELETE', url: `/membership/permissions/${permission_id}`, ...requestConfig })
  return res.data
}

/**
 * @description Remove a permission from a group
 * @summary Remove a permission from a group
 * {@link /membership/permissions/:permission_id}
 */
export function useDeleteMembershipPermissionsPermissionId<TContext>(
  options: {
    mutation?: UseMutationOptions<
      DeleteMembershipPermissionsPermissionIdMutationResponse,
      ResponseErrorConfig<
        | DeleteMembershipPermissionsPermissionId400
        | DeleteMembershipPermissionsPermissionId401
        | DeleteMembershipPermissionsPermissionId403
        | DeleteMembershipPermissionsPermissionId404
        | DeleteMembershipPermissionsPermissionId500
      >,
      { permission_id: DeleteMembershipPermissionsPermissionIdPathParams['permission_id'] },
      TContext
    > & { client?: QueryClient }
    client?: Partial<RequestConfig> & { client?: typeof client }
  } = {},
) {
  const { mutation = {}, client: config = {} } = options ?? {}
  const { client: queryClient, ...mutationOptions } = mutation
  const mutationKey = mutationOptions.mutationKey ?? deleteMembershipPermissionsPermissionIdMutationKey()

  return useMutation<
    DeleteMembershipPermissionsPermissionIdMutationResponse,
    ResponseErrorConfig<
      | DeleteMembershipPermissionsPermissionId400
      | DeleteMembershipPermissionsPermissionId401
      | DeleteMembershipPermissionsPermissionId403
      | DeleteMembershipPermissionsPermissionId404
      | DeleteMembershipPermissionsPermissionId500
    >,
    { permission_id: DeleteMembershipPermissionsPermissionIdPathParams['permission_id'] },
    TContext
  >(
    {
      mutationFn: async ({ permission_id }) => {
        return deleteMembershipPermissionsPermissionId(permission_id, config)
      },
      mutationKey,
      ...mutationOptions,
    },
    queryClient,
  )
}