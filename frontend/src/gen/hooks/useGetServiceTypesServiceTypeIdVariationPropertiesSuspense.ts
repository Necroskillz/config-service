/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '~/axios'
import type { QueryKey, QueryClient, UseSuspenseQueryOptions, UseSuspenseQueryResult } from '@tanstack/react-query'
import type {
  GetServiceTypesServiceTypeIdVariationPropertiesQueryResponse,
  GetServiceTypesServiceTypeIdVariationPropertiesPathParams,
  GetServiceTypesServiceTypeIdVariationProperties400,
  GetServiceTypesServiceTypeIdVariationProperties401,
  GetServiceTypesServiceTypeIdVariationProperties404,
  GetServiceTypesServiceTypeIdVariationProperties500,
} from '../types/GetServiceTypesServiceTypeIdVariationProperties.ts'
import type { RequestConfig, ResponseErrorConfig } from '~/axios'
import { queryOptions, useSuspenseQuery } from '@tanstack/react-query'

export const getServiceTypesServiceTypeIdVariationPropertiesSuspenseQueryKey = (
  service_type_id: GetServiceTypesServiceTypeIdVariationPropertiesPathParams['service_type_id'],
) => [{ url: '/service-types/:service_type_id/variation-properties', params: { service_type_id: service_type_id } }] as const

export type GetServiceTypesServiceTypeIdVariationPropertiesSuspenseQueryKey = ReturnType<typeof getServiceTypesServiceTypeIdVariationPropertiesSuspenseQueryKey>

/**
 * @description Get variation properties for a service type
 * @summary Get variation properties
 * {@link /service-types/:service_type_id/variation-properties}
 */
export async function getServiceTypesServiceTypeIdVariationPropertiesSuspense(
  service_type_id: GetServiceTypesServiceTypeIdVariationPropertiesPathParams['service_type_id'],
  config: Partial<RequestConfig> & { client?: typeof client } = {},
) {
  const { client: request = client, ...requestConfig } = config

  const res = await request<
    GetServiceTypesServiceTypeIdVariationPropertiesQueryResponse,
    ResponseErrorConfig<
      | GetServiceTypesServiceTypeIdVariationProperties400
      | GetServiceTypesServiceTypeIdVariationProperties401
      | GetServiceTypesServiceTypeIdVariationProperties404
      | GetServiceTypesServiceTypeIdVariationProperties500
    >,
    unknown
  >({ method: 'GET', url: `/service-types/${service_type_id}/variation-properties`, ...requestConfig })
  return res.data
}

export function getServiceTypesServiceTypeIdVariationPropertiesSuspenseQueryOptions(
  service_type_id: GetServiceTypesServiceTypeIdVariationPropertiesPathParams['service_type_id'],
  config: Partial<RequestConfig> & { client?: typeof client } = {},
) {
  const queryKey = getServiceTypesServiceTypeIdVariationPropertiesSuspenseQueryKey(service_type_id)
  return queryOptions<
    GetServiceTypesServiceTypeIdVariationPropertiesQueryResponse,
    ResponseErrorConfig<
      | GetServiceTypesServiceTypeIdVariationProperties400
      | GetServiceTypesServiceTypeIdVariationProperties401
      | GetServiceTypesServiceTypeIdVariationProperties404
      | GetServiceTypesServiceTypeIdVariationProperties500
    >,
    GetServiceTypesServiceTypeIdVariationPropertiesQueryResponse,
    typeof queryKey
  >({
    enabled: !!service_type_id,
    queryKey,
    queryFn: async ({ signal }) => {
      config.signal = signal
      return getServiceTypesServiceTypeIdVariationPropertiesSuspense(service_type_id, config)
    },
  })
}

/**
 * @description Get variation properties for a service type
 * @summary Get variation properties
 * {@link /service-types/:service_type_id/variation-properties}
 */
export function useGetServiceTypesServiceTypeIdVariationPropertiesSuspense<
  TData = GetServiceTypesServiceTypeIdVariationPropertiesQueryResponse,
  TQueryData = GetServiceTypesServiceTypeIdVariationPropertiesQueryResponse,
  TQueryKey extends QueryKey = GetServiceTypesServiceTypeIdVariationPropertiesSuspenseQueryKey,
>(
  service_type_id: GetServiceTypesServiceTypeIdVariationPropertiesPathParams['service_type_id'],
  options: {
    query?: Partial<
      UseSuspenseQueryOptions<
        GetServiceTypesServiceTypeIdVariationPropertiesQueryResponse,
        ResponseErrorConfig<
          | GetServiceTypesServiceTypeIdVariationProperties400
          | GetServiceTypesServiceTypeIdVariationProperties401
          | GetServiceTypesServiceTypeIdVariationProperties404
          | GetServiceTypesServiceTypeIdVariationProperties500
        >,
        TData,
        TQueryKey
      >
    > & { client?: QueryClient }
    client?: Partial<RequestConfig> & { client?: typeof client }
  } = {},
) {
  const { query: { client: queryClient, ...queryOptions } = {}, client: config = {} } = options ?? {}
  const queryKey = queryOptions?.queryKey ?? getServiceTypesServiceTypeIdVariationPropertiesSuspenseQueryKey(service_type_id)

  const query = useSuspenseQuery(
    {
      ...(getServiceTypesServiceTypeIdVariationPropertiesSuspenseQueryOptions(service_type_id, config) as unknown as UseSuspenseQueryOptions),
      queryKey,
      ...(queryOptions as unknown as Omit<UseSuspenseQueryOptions, 'queryKey'>),
    },
    queryClient,
  ) as UseSuspenseQueryResult<
    TData,
    ResponseErrorConfig<
      | GetServiceTypesServiceTypeIdVariationProperties400
      | GetServiceTypesServiceTypeIdVariationProperties401
      | GetServiceTypesServiceTypeIdVariationProperties404
      | GetServiceTypesServiceTypeIdVariationProperties500
    >
  > & { queryKey: TQueryKey }

  query.queryKey = queryKey as TQueryKey

  return query
}