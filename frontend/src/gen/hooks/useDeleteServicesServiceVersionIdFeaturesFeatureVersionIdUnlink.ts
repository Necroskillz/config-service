/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '~/axios'
import type {
  DeleteServicesServiceVersionIdFeaturesFeatureVersionIdUnlinkMutationResponse,
  DeleteServicesServiceVersionIdFeaturesFeatureVersionIdUnlinkPathParams,
  DeleteServicesServiceVersionIdFeaturesFeatureVersionIdUnlink400,
  DeleteServicesServiceVersionIdFeaturesFeatureVersionIdUnlink401,
  DeleteServicesServiceVersionIdFeaturesFeatureVersionIdUnlink403,
  DeleteServicesServiceVersionIdFeaturesFeatureVersionIdUnlink404,
  DeleteServicesServiceVersionIdFeaturesFeatureVersionIdUnlink500,
} from '../types/DeleteServicesServiceVersionIdFeaturesFeatureVersionIdUnlink.ts'
import type { UseMutationOptions, QueryClient } from '@tanstack/react-query'
import type { RequestConfig, ResponseErrorConfig } from '~/axios'
import { useMutation } from '@tanstack/react-query'

export const deleteServicesServiceVersionIdFeaturesFeatureVersionIdUnlinkMutationKey = () =>
  [{ url: '/services/{service_version_id}/features/{feature_version_id}/unlink' }] as const

export type DeleteServicesServiceVersionIdFeaturesFeatureVersionIdUnlinkMutationKey = ReturnType<
  typeof deleteServicesServiceVersionIdFeaturesFeatureVersionIdUnlinkMutationKey
>

/**
 * @description Unlink feature version from a service version
 * @summary Unlink feature version
 * {@link /services/:service_version_id/features/:feature_version_id/unlink}
 */
export async function deleteServicesServiceVersionIdFeaturesFeatureVersionIdUnlink(
  service_version_id: DeleteServicesServiceVersionIdFeaturesFeatureVersionIdUnlinkPathParams['service_version_id'],
  feature_version_id: DeleteServicesServiceVersionIdFeaturesFeatureVersionIdUnlinkPathParams['feature_version_id'],
  config: Partial<RequestConfig> & { client?: typeof client } = {},
) {
  const { client: request = client, ...requestConfig } = config

  const res = await request<
    DeleteServicesServiceVersionIdFeaturesFeatureVersionIdUnlinkMutationResponse,
    ResponseErrorConfig<
      | DeleteServicesServiceVersionIdFeaturesFeatureVersionIdUnlink400
      | DeleteServicesServiceVersionIdFeaturesFeatureVersionIdUnlink401
      | DeleteServicesServiceVersionIdFeaturesFeatureVersionIdUnlink403
      | DeleteServicesServiceVersionIdFeaturesFeatureVersionIdUnlink404
      | DeleteServicesServiceVersionIdFeaturesFeatureVersionIdUnlink500
    >,
    unknown
  >({ method: 'DELETE', url: `/services/${service_version_id}/features/${feature_version_id}/unlink`, ...requestConfig })
  return res.data
}

/**
 * @description Unlink feature version from a service version
 * @summary Unlink feature version
 * {@link /services/:service_version_id/features/:feature_version_id/unlink}
 */
export function useDeleteServicesServiceVersionIdFeaturesFeatureVersionIdUnlink<TContext>(
  options: {
    mutation?: UseMutationOptions<
      DeleteServicesServiceVersionIdFeaturesFeatureVersionIdUnlinkMutationResponse,
      ResponseErrorConfig<
        | DeleteServicesServiceVersionIdFeaturesFeatureVersionIdUnlink400
        | DeleteServicesServiceVersionIdFeaturesFeatureVersionIdUnlink401
        | DeleteServicesServiceVersionIdFeaturesFeatureVersionIdUnlink403
        | DeleteServicesServiceVersionIdFeaturesFeatureVersionIdUnlink404
        | DeleteServicesServiceVersionIdFeaturesFeatureVersionIdUnlink500
      >,
      {
        service_version_id: DeleteServicesServiceVersionIdFeaturesFeatureVersionIdUnlinkPathParams['service_version_id']
        feature_version_id: DeleteServicesServiceVersionIdFeaturesFeatureVersionIdUnlinkPathParams['feature_version_id']
      },
      TContext
    > & { client?: QueryClient }
    client?: Partial<RequestConfig> & { client?: typeof client }
  } = {},
) {
  const { mutation: { client: queryClient, ...mutationOptions } = {}, client: config = {} } = options ?? {}
  const mutationKey = mutationOptions?.mutationKey ?? deleteServicesServiceVersionIdFeaturesFeatureVersionIdUnlinkMutationKey()

  return useMutation<
    DeleteServicesServiceVersionIdFeaturesFeatureVersionIdUnlinkMutationResponse,
    ResponseErrorConfig<
      | DeleteServicesServiceVersionIdFeaturesFeatureVersionIdUnlink400
      | DeleteServicesServiceVersionIdFeaturesFeatureVersionIdUnlink401
      | DeleteServicesServiceVersionIdFeaturesFeatureVersionIdUnlink403
      | DeleteServicesServiceVersionIdFeaturesFeatureVersionIdUnlink404
      | DeleteServicesServiceVersionIdFeaturesFeatureVersionIdUnlink500
    >,
    {
      service_version_id: DeleteServicesServiceVersionIdFeaturesFeatureVersionIdUnlinkPathParams['service_version_id']
      feature_version_id: DeleteServicesServiceVersionIdFeaturesFeatureVersionIdUnlinkPathParams['feature_version_id']
    },
    TContext
  >(
    {
      mutationFn: async ({ service_version_id, feature_version_id }) => {
        return deleteServicesServiceVersionIdFeaturesFeatureVersionIdUnlink(service_version_id, feature_version_id, config)
      },
      mutationKey,
      ...mutationOptions,
    },
    queryClient,
  )
}