/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '~/axios'
import type {
  PutChangesetsChangesetIdStashMutationResponse,
  PutChangesetsChangesetIdStashPathParams,
  PutChangesetsChangesetIdStash400,
  PutChangesetsChangesetIdStash401,
  PutChangesetsChangesetIdStash403,
  PutChangesetsChangesetIdStash404,
  PutChangesetsChangesetIdStash500,
} from '../types/PutChangesetsChangesetIdStash.ts'
import type { UseMutationOptions, QueryClient } from '@tanstack/react-query'
import type { RequestConfig, ResponseErrorConfig } from '~/axios'
import { useMutation } from '@tanstack/react-query'

export const putChangesetsChangesetIdStashMutationKey = () => [{ url: '/changesets/{changeset_id}/stash' }] as const

export type PutChangesetsChangesetIdStashMutationKey = ReturnType<typeof putChangesetsChangesetIdStashMutationKey>

/**
 * @description Stash a changeset by ID
 * @summary Stash a changeset
 * {@link /changesets/:changeset_id/stash}
 */
export async function putChangesetsChangesetIdStash(
  changeset_id: PutChangesetsChangesetIdStashPathParams['changeset_id'],
  config: Partial<RequestConfig> & { client?: typeof client } = {},
) {
  const { client: request = client, ...requestConfig } = config

  const res = await request<
    PutChangesetsChangesetIdStashMutationResponse,
    ResponseErrorConfig<
      | PutChangesetsChangesetIdStash400
      | PutChangesetsChangesetIdStash401
      | PutChangesetsChangesetIdStash403
      | PutChangesetsChangesetIdStash404
      | PutChangesetsChangesetIdStash500
    >,
    unknown
  >({ method: 'PUT', url: `/changesets/${changeset_id}/stash`, ...requestConfig })
  return res.data
}

/**
 * @description Stash a changeset by ID
 * @summary Stash a changeset
 * {@link /changesets/:changeset_id/stash}
 */
export function usePutChangesetsChangesetIdStash<TContext>(
  options: {
    mutation?: UseMutationOptions<
      PutChangesetsChangesetIdStashMutationResponse,
      ResponseErrorConfig<
        | PutChangesetsChangesetIdStash400
        | PutChangesetsChangesetIdStash401
        | PutChangesetsChangesetIdStash403
        | PutChangesetsChangesetIdStash404
        | PutChangesetsChangesetIdStash500
      >,
      { changeset_id: PutChangesetsChangesetIdStashPathParams['changeset_id'] },
      TContext
    > & { client?: QueryClient }
    client?: Partial<RequestConfig> & { client?: typeof client }
  } = {},
) {
  const { mutation = {}, client: config = {} } = options ?? {}
  const { client: queryClient, ...mutationOptions } = mutation
  const mutationKey = mutationOptions.mutationKey ?? putChangesetsChangesetIdStashMutationKey()

  return useMutation<
    PutChangesetsChangesetIdStashMutationResponse,
    ResponseErrorConfig<
      | PutChangesetsChangesetIdStash400
      | PutChangesetsChangesetIdStash401
      | PutChangesetsChangesetIdStash403
      | PutChangesetsChangesetIdStash404
      | PutChangesetsChangesetIdStash500
    >,
    { changeset_id: PutChangesetsChangesetIdStashPathParams['changeset_id'] },
    TContext
  >(
    {
      mutationFn: async ({ changeset_id }) => {
        return putChangesetsChangesetIdStash(changeset_id, config)
      },
      mutationKey,
      ...mutationOptions,
    },
    queryClient,
  )
}