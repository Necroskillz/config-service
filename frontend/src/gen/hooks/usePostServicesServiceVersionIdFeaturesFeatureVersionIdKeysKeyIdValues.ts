/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '~/axios'
import type {
  PostServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesMutationRequest,
  PostServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesMutationResponse,
  PostServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesPathParams,
  PostServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValues400,
  PostServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValues401,
  PostServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValues403,
  PostServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValues404,
  PostServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValues422,
  PostServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValues500,
} from '../types/PostServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValues.ts'
import type { UseMutationOptions, QueryClient } from '@tanstack/react-query'
import type { RequestConfig, ResponseErrorConfig } from '~/axios'
import { useMutation } from '@tanstack/react-query'

export const postServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesMutationKey = () =>
  [{ url: '/services/{service_version_id}/features/{feature_version_id}/keys/{key_id}/values' }] as const

export type PostServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesMutationKey = ReturnType<
  typeof postServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesMutationKey
>

/**
 * @description Create value
 * @summary Create value
 * {@link /services/:service_version_id/features/:feature_version_id/keys/:key_id/values}
 */
export async function postServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValues(
  service_version_id: PostServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesPathParams['service_version_id'],
  feature_version_id: PostServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesPathParams['feature_version_id'],
  key_id: PostServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesPathParams['key_id'],
  data: PostServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesMutationRequest,
  config: Partial<RequestConfig<PostServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesMutationRequest>> & { client?: typeof client } = {},
) {
  const { client: request = client, ...requestConfig } = config

  const res = await request<
    PostServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesMutationResponse,
    ResponseErrorConfig<
      | PostServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValues400
      | PostServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValues401
      | PostServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValues403
      | PostServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValues404
      | PostServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValues422
      | PostServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValues500
    >,
    PostServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesMutationRequest
  >({ method: 'POST', url: `/services/${service_version_id}/features/${feature_version_id}/keys/${key_id}/values`, data, ...requestConfig })
  return res.data
}

/**
 * @description Create value
 * @summary Create value
 * {@link /services/:service_version_id/features/:feature_version_id/keys/:key_id/values}
 */
export function usePostServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValues<TContext>(
  options: {
    mutation?: UseMutationOptions<
      PostServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesMutationResponse,
      ResponseErrorConfig<
        | PostServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValues400
        | PostServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValues401
        | PostServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValues403
        | PostServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValues404
        | PostServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValues422
        | PostServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValues500
      >,
      {
        service_version_id: PostServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesPathParams['service_version_id']
        feature_version_id: PostServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesPathParams['feature_version_id']
        key_id: PostServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesPathParams['key_id']
        data: PostServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesMutationRequest
      },
      TContext
    > & { client?: QueryClient }
    client?: Partial<RequestConfig<PostServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesMutationRequest>> & { client?: typeof client }
  } = {},
) {
  const { mutation: { client: queryClient, ...mutationOptions } = {}, client: config = {} } = options ?? {}
  const mutationKey = mutationOptions?.mutationKey ?? postServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesMutationKey()

  return useMutation<
    PostServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesMutationResponse,
    ResponseErrorConfig<
      | PostServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValues400
      | PostServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValues401
      | PostServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValues403
      | PostServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValues404
      | PostServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValues422
      | PostServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValues500
    >,
    {
      service_version_id: PostServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesPathParams['service_version_id']
      feature_version_id: PostServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesPathParams['feature_version_id']
      key_id: PostServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesPathParams['key_id']
      data: PostServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesMutationRequest
    },
    TContext
  >(
    {
      mutationFn: async ({ service_version_id, feature_version_id, key_id, data }) => {
        return postServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValues(service_version_id, feature_version_id, key_id, data, config)
      },
      mutationKey,
      ...mutationOptions,
    },
    queryClient,
  )
}