/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '~/axios'
import type { UseMutationOptions, QueryClient } from '@tanstack/react-query'
import type {
  PutServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdMutationRequest,
  PutServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdMutationResponse,
  PutServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdPathParams,
  PutServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyId400,
  PutServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyId401,
  PutServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyId403,
  PutServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyId404,
  PutServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyId500,
} from '../types/PutServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyId.ts'
import type { RequestConfig, ResponseErrorConfig } from '~/axios'
import { useMutation } from '@tanstack/react-query'

export const putServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdMutationKey = () =>
  [{ url: '/services/{service_version_id}/features/{feature_version_id}/keys/{key_id}' }] as const

export type PutServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdMutationKey = ReturnType<
  typeof putServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdMutationKey
>

/**
 * @description Create a key
 * @summary Create a key
 * {@link /services/:service_version_id/features/:feature_version_id/keys/:key_id}
 */
export async function putServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyId(
  service_version_id: PutServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdPathParams['service_version_id'],
  feature_version_id: PutServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdPathParams['feature_version_id'],
  key_id: PutServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdPathParams['key_id'],
  data: PutServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdMutationRequest,
  config: Partial<RequestConfig<PutServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdMutationRequest>> & { client?: typeof client } = {},
) {
  const { client: request = client, ...requestConfig } = config

  const res = await request<
    PutServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdMutationResponse,
    ResponseErrorConfig<
      | PutServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyId400
      | PutServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyId401
      | PutServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyId403
      | PutServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyId404
      | PutServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyId500
    >,
    PutServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdMutationRequest
  >({ method: 'PUT', url: `/services/${service_version_id}/features/${feature_version_id}/keys/${key_id}`, data, ...requestConfig })
  return res.data
}

/**
 * @description Create a key
 * @summary Create a key
 * {@link /services/:service_version_id/features/:feature_version_id/keys/:key_id}
 */
export function usePutServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyId<TContext>(
  options: {
    mutation?: UseMutationOptions<
      PutServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdMutationResponse,
      ResponseErrorConfig<
        | PutServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyId400
        | PutServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyId401
        | PutServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyId403
        | PutServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyId404
        | PutServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyId500
      >,
      {
        service_version_id: PutServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdPathParams['service_version_id']
        feature_version_id: PutServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdPathParams['feature_version_id']
        key_id: PutServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdPathParams['key_id']
        data: PutServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdMutationRequest
      },
      TContext
    > & { client?: QueryClient }
    client?: Partial<RequestConfig<PutServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdMutationRequest>> & { client?: typeof client }
  } = {},
) {
  const { mutation = {}, client: config = {} } = options ?? {}
  const { client: queryClient, ...mutationOptions } = mutation
  const mutationKey = mutationOptions.mutationKey ?? putServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdMutationKey()

  return useMutation<
    PutServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdMutationResponse,
    ResponseErrorConfig<
      | PutServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyId400
      | PutServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyId401
      | PutServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyId403
      | PutServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyId404
      | PutServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyId500
    >,
    {
      service_version_id: PutServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdPathParams['service_version_id']
      feature_version_id: PutServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdPathParams['feature_version_id']
      key_id: PutServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdPathParams['key_id']
      data: PutServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdMutationRequest
    },
    TContext
  >(
    {
      mutationFn: async ({ service_version_id, feature_version_id, key_id, data }) => {
        return putServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyId(service_version_id, feature_version_id, key_id, data, config)
      },
      mutationKey,
      ...mutationOptions,
    },
    queryClient,
  )
}