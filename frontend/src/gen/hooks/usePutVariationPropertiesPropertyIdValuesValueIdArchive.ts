/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '~/axios'
import type { UseMutationOptions, QueryClient } from '@tanstack/react-query'
import type {
  PutVariationPropertiesPropertyIdValuesValueIdArchiveMutationResponse,
  PutVariationPropertiesPropertyIdValuesValueIdArchivePathParams,
  PutVariationPropertiesPropertyIdValuesValueIdArchive400,
  PutVariationPropertiesPropertyIdValuesValueIdArchive401,
  PutVariationPropertiesPropertyIdValuesValueIdArchive403,
  PutVariationPropertiesPropertyIdValuesValueIdArchive404,
  PutVariationPropertiesPropertyIdValuesValueIdArchive500,
} from '../types/PutVariationPropertiesPropertyIdValuesValueIdArchive.ts'
import type { RequestConfig, ResponseErrorConfig } from '~/axios'
import { useMutation } from '@tanstack/react-query'

export const putVariationPropertiesPropertyIdValuesValueIdArchiveMutationKey = () =>
  [{ url: '/variation-properties/{property_id}/values/{value_id}/archive' }] as const

export type PutVariationPropertiesPropertyIdValuesValueIdArchiveMutationKey = ReturnType<typeof putVariationPropertiesPropertyIdValuesValueIdArchiveMutationKey>

/**
 * @description Archive a variation property value
 * @summary Archive variation property value
 * {@link /variation-properties/:property_id/values/:value_id/archive}
 */
export async function putVariationPropertiesPropertyIdValuesValueIdArchive(
  property_id: PutVariationPropertiesPropertyIdValuesValueIdArchivePathParams['property_id'],
  value_id: PutVariationPropertiesPropertyIdValuesValueIdArchivePathParams['value_id'],
  config: Partial<RequestConfig> & { client?: typeof client } = {},
) {
  const { client: request = client, ...requestConfig } = config

  const res = await request<
    PutVariationPropertiesPropertyIdValuesValueIdArchiveMutationResponse,
    ResponseErrorConfig<
      | PutVariationPropertiesPropertyIdValuesValueIdArchive400
      | PutVariationPropertiesPropertyIdValuesValueIdArchive401
      | PutVariationPropertiesPropertyIdValuesValueIdArchive403
      | PutVariationPropertiesPropertyIdValuesValueIdArchive404
      | PutVariationPropertiesPropertyIdValuesValueIdArchive500
    >,
    unknown
  >({ method: 'PUT', url: `/variation-properties/${property_id}/values/${value_id}/archive`, ...requestConfig })
  return res.data
}

/**
 * @description Archive a variation property value
 * @summary Archive variation property value
 * {@link /variation-properties/:property_id/values/:value_id/archive}
 */
export function usePutVariationPropertiesPropertyIdValuesValueIdArchive<TContext>(
  options: {
    mutation?: UseMutationOptions<
      PutVariationPropertiesPropertyIdValuesValueIdArchiveMutationResponse,
      ResponseErrorConfig<
        | PutVariationPropertiesPropertyIdValuesValueIdArchive400
        | PutVariationPropertiesPropertyIdValuesValueIdArchive401
        | PutVariationPropertiesPropertyIdValuesValueIdArchive403
        | PutVariationPropertiesPropertyIdValuesValueIdArchive404
        | PutVariationPropertiesPropertyIdValuesValueIdArchive500
      >,
      {
        property_id: PutVariationPropertiesPropertyIdValuesValueIdArchivePathParams['property_id']
        value_id: PutVariationPropertiesPropertyIdValuesValueIdArchivePathParams['value_id']
      },
      TContext
    > & { client?: QueryClient }
    client?: Partial<RequestConfig> & { client?: typeof client }
  } = {},
) {
  const { mutation: { client: queryClient, ...mutationOptions } = {}, client: config = {} } = options ?? {}
  const mutationKey = mutationOptions?.mutationKey ?? putVariationPropertiesPropertyIdValuesValueIdArchiveMutationKey()

  return useMutation<
    PutVariationPropertiesPropertyIdValuesValueIdArchiveMutationResponse,
    ResponseErrorConfig<
      | PutVariationPropertiesPropertyIdValuesValueIdArchive400
      | PutVariationPropertiesPropertyIdValuesValueIdArchive401
      | PutVariationPropertiesPropertyIdValuesValueIdArchive403
      | PutVariationPropertiesPropertyIdValuesValueIdArchive404
      | PutVariationPropertiesPropertyIdValuesValueIdArchive500
    >,
    {
      property_id: PutVariationPropertiesPropertyIdValuesValueIdArchivePathParams['property_id']
      value_id: PutVariationPropertiesPropertyIdValuesValueIdArchivePathParams['value_id']
    },
    TContext
  >(
    {
      mutationFn: async ({ property_id, value_id }) => {
        return putVariationPropertiesPropertyIdValuesValueIdArchive(property_id, value_id, config)
      },
      mutationKey,
      ...mutationOptions,
    },
    queryClient,
  )
}