/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '~/axios'
import type {
  PostServiceTypesServiceTypeIdVariationPropertiesMutationRequest,
  PostServiceTypesServiceTypeIdVariationPropertiesMutationResponse,
  PostServiceTypesServiceTypeIdVariationPropertiesPathParams,
  PostServiceTypesServiceTypeIdVariationProperties400,
  PostServiceTypesServiceTypeIdVariationProperties401,
  PostServiceTypesServiceTypeIdVariationProperties403,
  PostServiceTypesServiceTypeIdVariationProperties404,
  PostServiceTypesServiceTypeIdVariationProperties500,
} from '../types/PostServiceTypesServiceTypeIdVariationProperties.ts'
import type { UseMutationOptions, QueryClient } from '@tanstack/react-query'
import type { RequestConfig, ResponseErrorConfig } from '~/axios'
import { useMutation } from '@tanstack/react-query'

export const postServiceTypesServiceTypeIdVariationPropertiesMutationKey = () => [{ url: '/service-types/{service_type_id}/variation-properties' }] as const

export type PostServiceTypesServiceTypeIdVariationPropertiesMutationKey = ReturnType<typeof postServiceTypesServiceTypeIdVariationPropertiesMutationKey>

/**
 * @description Link a variation property to a service type
 * @summary Link variation property to service type
 * {@link /service-types/:service_type_id/variation-properties}
 */
export async function postServiceTypesServiceTypeIdVariationProperties(
  service_type_id: PostServiceTypesServiceTypeIdVariationPropertiesPathParams['service_type_id'],
  data: PostServiceTypesServiceTypeIdVariationPropertiesMutationRequest,
  config: Partial<RequestConfig<PostServiceTypesServiceTypeIdVariationPropertiesMutationRequest>> & { client?: typeof client } = {},
) {
  const { client: request = client, ...requestConfig } = config

  const res = await request<
    PostServiceTypesServiceTypeIdVariationPropertiesMutationResponse,
    ResponseErrorConfig<
      | PostServiceTypesServiceTypeIdVariationProperties400
      | PostServiceTypesServiceTypeIdVariationProperties401
      | PostServiceTypesServiceTypeIdVariationProperties403
      | PostServiceTypesServiceTypeIdVariationProperties404
      | PostServiceTypesServiceTypeIdVariationProperties500
    >,
    PostServiceTypesServiceTypeIdVariationPropertiesMutationRequest
  >({ method: 'POST', url: `/service-types/${service_type_id}/variation-properties`, data, ...requestConfig })
  return res.data
}

/**
 * @description Link a variation property to a service type
 * @summary Link variation property to service type
 * {@link /service-types/:service_type_id/variation-properties}
 */
export function usePostServiceTypesServiceTypeIdVariationProperties<TContext>(
  options: {
    mutation?: UseMutationOptions<
      PostServiceTypesServiceTypeIdVariationPropertiesMutationResponse,
      ResponseErrorConfig<
        | PostServiceTypesServiceTypeIdVariationProperties400
        | PostServiceTypesServiceTypeIdVariationProperties401
        | PostServiceTypesServiceTypeIdVariationProperties403
        | PostServiceTypesServiceTypeIdVariationProperties404
        | PostServiceTypesServiceTypeIdVariationProperties500
      >,
      {
        service_type_id: PostServiceTypesServiceTypeIdVariationPropertiesPathParams['service_type_id']
        data: PostServiceTypesServiceTypeIdVariationPropertiesMutationRequest
      },
      TContext
    > & { client?: QueryClient }
    client?: Partial<RequestConfig<PostServiceTypesServiceTypeIdVariationPropertiesMutationRequest>> & { client?: typeof client }
  } = {},
) {
  const { mutation = {}, client: config = {} } = options ?? {}
  const { client: queryClient, ...mutationOptions } = mutation
  const mutationKey = mutationOptions.mutationKey ?? postServiceTypesServiceTypeIdVariationPropertiesMutationKey()

  return useMutation<
    PostServiceTypesServiceTypeIdVariationPropertiesMutationResponse,
    ResponseErrorConfig<
      | PostServiceTypesServiceTypeIdVariationProperties400
      | PostServiceTypesServiceTypeIdVariationProperties401
      | PostServiceTypesServiceTypeIdVariationProperties403
      | PostServiceTypesServiceTypeIdVariationProperties404
      | PostServiceTypesServiceTypeIdVariationProperties500
    >,
    {
      service_type_id: PostServiceTypesServiceTypeIdVariationPropertiesPathParams['service_type_id']
      data: PostServiceTypesServiceTypeIdVariationPropertiesMutationRequest
    },
    TContext
  >(
    {
      mutationFn: async ({ service_type_id, data }) => {
        return postServiceTypesServiceTypeIdVariationProperties(service_type_id, data, config)
      },
      mutationKey,
      ...mutationOptions,
    },
    queryClient,
  )
}