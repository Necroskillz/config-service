/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '~/axios'
import type {
  PostVariationPropertiesPropertyIdValuesMutationRequest,
  PostVariationPropertiesPropertyIdValuesMutationResponse,
  PostVariationPropertiesPropertyIdValuesPathParams,
  PostVariationPropertiesPropertyIdValues400,
  PostVariationPropertiesPropertyIdValues401,
  PostVariationPropertiesPropertyIdValues403,
  PostVariationPropertiesPropertyIdValues404,
  PostVariationPropertiesPropertyIdValues500,
} from '../types/PostVariationPropertiesPropertyIdValues.ts'
import type { UseMutationOptions, QueryClient } from '@tanstack/react-query'
import type { RequestConfig, ResponseErrorConfig } from '~/axios'
import { useMutation } from '@tanstack/react-query'

export const postVariationPropertiesPropertyIdValuesMutationKey = () => [{ url: '/variation-properties/{property_id}/values' }] as const

export type PostVariationPropertiesPropertyIdValuesMutationKey = ReturnType<typeof postVariationPropertiesPropertyIdValuesMutationKey>

/**
 * @description Create a new variation property value
 * @summary Create variation property value
 * {@link /variation-properties/:property_id/values}
 */
export async function postVariationPropertiesPropertyIdValues(
  property_id: PostVariationPropertiesPropertyIdValuesPathParams['property_id'],
  data?: PostVariationPropertiesPropertyIdValuesMutationRequest,
  config: Partial<RequestConfig<PostVariationPropertiesPropertyIdValuesMutationRequest>> & { client?: typeof client } = {},
) {
  const { client: request = client, ...requestConfig } = config

  const res = await request<
    PostVariationPropertiesPropertyIdValuesMutationResponse,
    ResponseErrorConfig<
      | PostVariationPropertiesPropertyIdValues400
      | PostVariationPropertiesPropertyIdValues401
      | PostVariationPropertiesPropertyIdValues403
      | PostVariationPropertiesPropertyIdValues404
      | PostVariationPropertiesPropertyIdValues500
    >,
    PostVariationPropertiesPropertyIdValuesMutationRequest
  >({ method: 'POST', url: `/variation-properties/${property_id}/values`, data, ...requestConfig })
  return res.data
}

/**
 * @description Create a new variation property value
 * @summary Create variation property value
 * {@link /variation-properties/:property_id/values}
 */
export function usePostVariationPropertiesPropertyIdValues<TContext>(
  options: {
    mutation?: UseMutationOptions<
      PostVariationPropertiesPropertyIdValuesMutationResponse,
      ResponseErrorConfig<
        | PostVariationPropertiesPropertyIdValues400
        | PostVariationPropertiesPropertyIdValues401
        | PostVariationPropertiesPropertyIdValues403
        | PostVariationPropertiesPropertyIdValues404
        | PostVariationPropertiesPropertyIdValues500
      >,
      { property_id: PostVariationPropertiesPropertyIdValuesPathParams['property_id']; data?: PostVariationPropertiesPropertyIdValuesMutationRequest },
      TContext
    > & { client?: QueryClient }
    client?: Partial<RequestConfig<PostVariationPropertiesPropertyIdValuesMutationRequest>> & { client?: typeof client }
  } = {},
) {
  const { mutation: { client: queryClient, ...mutationOptions } = {}, client: config = {} } = options ?? {}
  const mutationKey = mutationOptions?.mutationKey ?? postVariationPropertiesPropertyIdValuesMutationKey()

  return useMutation<
    PostVariationPropertiesPropertyIdValuesMutationResponse,
    ResponseErrorConfig<
      | PostVariationPropertiesPropertyIdValues400
      | PostVariationPropertiesPropertyIdValues401
      | PostVariationPropertiesPropertyIdValues403
      | PostVariationPropertiesPropertyIdValues404
      | PostVariationPropertiesPropertyIdValues500
    >,
    { property_id: PostVariationPropertiesPropertyIdValuesPathParams['property_id']; data?: PostVariationPropertiesPropertyIdValuesMutationRequest },
    TContext
  >(
    {
      mutationFn: async ({ property_id, data }) => {
        return postVariationPropertiesPropertyIdValues(property_id, data, config)
      },
      mutationKey,
      ...mutationOptions,
    },
    queryClient,
  )
}