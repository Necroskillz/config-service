/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '~/axios'
import type { QueryKey, QueryClient, UseSuspenseQueryOptions, UseSuspenseQueryResult } from '@tanstack/react-query'
import type {
  GetServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAddQueryResponse,
  GetServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAddPathParams,
  GetServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAddQueryParams,
  GetServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAdd400,
  GetServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAdd401,
  GetServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAdd403,
  GetServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAdd404,
  GetServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAdd409,
  GetServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAdd500,
} from '../types/GetServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAdd.ts'
import type { RequestConfig, ResponseErrorConfig } from '~/axios'
import { queryOptions, useSuspenseQuery } from '@tanstack/react-query'

export const getServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAddSuspenseQueryKey = (
  service_version_id: GetServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAddPathParams['service_version_id'],
  feature_version_id: GetServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAddPathParams['feature_version_id'],
  key_id: GetServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAddPathParams['key_id'],
  params?: GetServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAddQueryParams,
) =>
  [
    {
      url: '/services/:service_version_id/features/:feature_version_id/keys/:key_id/values/can-add',
      params: { service_version_id: service_version_id, feature_version_id: feature_version_id, key_id: key_id },
    },
    ...(params ? [params] : []),
  ] as const

export type GetServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAddSuspenseQueryKey = ReturnType<
  typeof getServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAddSuspenseQueryKey
>

/**
 * @description Can operate value with variation
 * @summary Can operate value with variation
 * {@link /services/:service_version_id/features/:feature_version_id/keys/:key_id/values/can-add}
 */
export async function getServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAddSuspense(
  service_version_id: GetServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAddPathParams['service_version_id'],
  feature_version_id: GetServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAddPathParams['feature_version_id'],
  key_id: GetServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAddPathParams['key_id'],
  params?: GetServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAddQueryParams,
  config: Partial<RequestConfig> & { client?: typeof client } = {},
) {
  const { client: request = client, ...requestConfig } = config

  const res = await request<
    GetServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAddQueryResponse,
    ResponseErrorConfig<
      | GetServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAdd400
      | GetServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAdd401
      | GetServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAdd403
      | GetServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAdd404
      | GetServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAdd409
      | GetServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAdd500
    >,
    unknown
  >({ method: 'GET', url: `/services/${service_version_id}/features/${feature_version_id}/keys/${key_id}/values/can-add`, params, ...requestConfig })
  return res.data
}

export function getServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAddSuspenseQueryOptions(
  service_version_id: GetServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAddPathParams['service_version_id'],
  feature_version_id: GetServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAddPathParams['feature_version_id'],
  key_id: GetServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAddPathParams['key_id'],
  params?: GetServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAddQueryParams,
  config: Partial<RequestConfig> & { client?: typeof client } = {},
) {
  const queryKey = getServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAddSuspenseQueryKey(
    service_version_id,
    feature_version_id,
    key_id,
    params,
  )
  return queryOptions<
    GetServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAddQueryResponse,
    ResponseErrorConfig<
      | GetServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAdd400
      | GetServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAdd401
      | GetServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAdd403
      | GetServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAdd404
      | GetServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAdd409
      | GetServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAdd500
    >,
    GetServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAddQueryResponse,
    typeof queryKey
  >({
    enabled: !!(service_version_id && feature_version_id && key_id),
    queryKey,
    queryFn: async ({ signal }) => {
      config.signal = signal
      return getServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAddSuspense(service_version_id, feature_version_id, key_id, params, config)
    },
  })
}

/**
 * @description Can operate value with variation
 * @summary Can operate value with variation
 * {@link /services/:service_version_id/features/:feature_version_id/keys/:key_id/values/can-add}
 */
export function useGetServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAddSuspense<
  TData = GetServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAddQueryResponse,
  TQueryKey extends QueryKey = GetServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAddSuspenseQueryKey,
>(
  service_version_id: GetServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAddPathParams['service_version_id'],
  feature_version_id: GetServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAddPathParams['feature_version_id'],
  key_id: GetServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAddPathParams['key_id'],
  params?: GetServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAddQueryParams,
  options: {
    query?: Partial<
      UseSuspenseQueryOptions<
        GetServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAddQueryResponse,
        ResponseErrorConfig<
          | GetServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAdd400
          | GetServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAdd401
          | GetServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAdd403
          | GetServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAdd404
          | GetServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAdd409
          | GetServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAdd500
        >,
        TData,
        TQueryKey
      >
    > & { client?: QueryClient }
    client?: Partial<RequestConfig> & { client?: typeof client }
  } = {},
) {
  const { query: { client: queryClient, ...queryOptions } = {}, client: config = {} } = options ?? {}
  const queryKey =
    queryOptions?.queryKey ??
    getServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAddSuspenseQueryKey(service_version_id, feature_version_id, key_id, params)

  const query = useSuspenseQuery(
    {
      ...(getServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAddSuspenseQueryOptions(
        service_version_id,
        feature_version_id,
        key_id,
        params,
        config,
      ) as unknown as UseSuspenseQueryOptions),
      queryKey,
      ...(queryOptions as unknown as Omit<UseSuspenseQueryOptions, 'queryKey'>),
    },
    queryClient,
  ) as UseSuspenseQueryResult<
    TData,
    ResponseErrorConfig<
      | GetServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAdd400
      | GetServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAdd401
      | GetServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAdd403
      | GetServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAdd404
      | GetServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAdd409
      | GetServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdValuesCanAdd500
    >
  > & { queryKey: TQueryKey }

  query.queryKey = queryKey as TQueryKey

  return query
}