/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '~/axios'
import type { QueryKey, QueryClient, QueryObserverOptions, UseQueryResult } from '@tanstack/react-query'
import type {
  GetServicesServiceVersionIdFeaturesFeatureVersionIdVersionsQueryResponse,
  GetServicesServiceVersionIdFeaturesFeatureVersionIdVersionsPathParams,
  GetServicesServiceVersionIdFeaturesFeatureVersionIdVersions400,
  GetServicesServiceVersionIdFeaturesFeatureVersionIdVersions401,
  GetServicesServiceVersionIdFeaturesFeatureVersionIdVersions404,
  GetServicesServiceVersionIdFeaturesFeatureVersionIdVersions500,
} from '../types/GetServicesServiceVersionIdFeaturesFeatureVersionIdVersions.ts'
import type { RequestConfig, ResponseErrorConfig } from '~/axios'
import { queryOptions, useQuery } from '@tanstack/react-query'

export const getServicesServiceVersionIdFeaturesFeatureVersionIdVersionsQueryKey = (
  service_version_id: GetServicesServiceVersionIdFeaturesFeatureVersionIdVersionsPathParams['service_version_id'],
  feature_version_id: GetServicesServiceVersionIdFeaturesFeatureVersionIdVersionsPathParams['feature_version_id'],
) =>
  [
    {
      url: '/services/:service_version_id/features/:feature_version_id/versions',
      params: { service_version_id: service_version_id, feature_version_id: feature_version_id },
    },
  ] as const

export type GetServicesServiceVersionIdFeaturesFeatureVersionIdVersionsQueryKey = ReturnType<
  typeof getServicesServiceVersionIdFeaturesFeatureVersionIdVersionsQueryKey
>

/**
 * @description Get feature versions
 * @summary Get feature versions
 * {@link /services/:service_version_id/features/:feature_version_id/versions}
 */
export async function getServicesServiceVersionIdFeaturesFeatureVersionIdVersions(
  service_version_id: GetServicesServiceVersionIdFeaturesFeatureVersionIdVersionsPathParams['service_version_id'],
  feature_version_id: GetServicesServiceVersionIdFeaturesFeatureVersionIdVersionsPathParams['feature_version_id'],
  config: Partial<RequestConfig> & { client?: typeof client } = {},
) {
  const { client: request = client, ...requestConfig } = config

  const res = await request<
    GetServicesServiceVersionIdFeaturesFeatureVersionIdVersionsQueryResponse,
    ResponseErrorConfig<
      | GetServicesServiceVersionIdFeaturesFeatureVersionIdVersions400
      | GetServicesServiceVersionIdFeaturesFeatureVersionIdVersions401
      | GetServicesServiceVersionIdFeaturesFeatureVersionIdVersions404
      | GetServicesServiceVersionIdFeaturesFeatureVersionIdVersions500
    >,
    unknown
  >({ method: 'GET', url: `/services/${service_version_id}/features/${feature_version_id}/versions`, ...requestConfig })
  return res.data
}

export function getServicesServiceVersionIdFeaturesFeatureVersionIdVersionsQueryOptions(
  service_version_id: GetServicesServiceVersionIdFeaturesFeatureVersionIdVersionsPathParams['service_version_id'],
  feature_version_id: GetServicesServiceVersionIdFeaturesFeatureVersionIdVersionsPathParams['feature_version_id'],
  config: Partial<RequestConfig> & { client?: typeof client } = {},
) {
  const queryKey = getServicesServiceVersionIdFeaturesFeatureVersionIdVersionsQueryKey(service_version_id, feature_version_id)
  return queryOptions<
    GetServicesServiceVersionIdFeaturesFeatureVersionIdVersionsQueryResponse,
    ResponseErrorConfig<
      | GetServicesServiceVersionIdFeaturesFeatureVersionIdVersions400
      | GetServicesServiceVersionIdFeaturesFeatureVersionIdVersions401
      | GetServicesServiceVersionIdFeaturesFeatureVersionIdVersions404
      | GetServicesServiceVersionIdFeaturesFeatureVersionIdVersions500
    >,
    GetServicesServiceVersionIdFeaturesFeatureVersionIdVersionsQueryResponse,
    typeof queryKey
  >({
    enabled: !!(service_version_id && feature_version_id),
    queryKey,
    queryFn: async ({ signal }) => {
      config.signal = signal
      return getServicesServiceVersionIdFeaturesFeatureVersionIdVersions(service_version_id, feature_version_id, config)
    },
  })
}

/**
 * @description Get feature versions
 * @summary Get feature versions
 * {@link /services/:service_version_id/features/:feature_version_id/versions}
 */
export function useGetServicesServiceVersionIdFeaturesFeatureVersionIdVersions<
  TData = GetServicesServiceVersionIdFeaturesFeatureVersionIdVersionsQueryResponse,
  TQueryData = GetServicesServiceVersionIdFeaturesFeatureVersionIdVersionsQueryResponse,
  TQueryKey extends QueryKey = GetServicesServiceVersionIdFeaturesFeatureVersionIdVersionsQueryKey,
>(
  service_version_id: GetServicesServiceVersionIdFeaturesFeatureVersionIdVersionsPathParams['service_version_id'],
  feature_version_id: GetServicesServiceVersionIdFeaturesFeatureVersionIdVersionsPathParams['feature_version_id'],
  options: {
    query?: Partial<
      QueryObserverOptions<
        GetServicesServiceVersionIdFeaturesFeatureVersionIdVersionsQueryResponse,
        ResponseErrorConfig<
          | GetServicesServiceVersionIdFeaturesFeatureVersionIdVersions400
          | GetServicesServiceVersionIdFeaturesFeatureVersionIdVersions401
          | GetServicesServiceVersionIdFeaturesFeatureVersionIdVersions404
          | GetServicesServiceVersionIdFeaturesFeatureVersionIdVersions500
        >,
        TData,
        TQueryData,
        TQueryKey
      >
    > & { client?: QueryClient }
    client?: Partial<RequestConfig> & { client?: typeof client }
  } = {},
) {
  const { query: { client: queryClient, ...queryOptions } = {}, client: config = {} } = options ?? {}
  const queryKey = queryOptions?.queryKey ?? getServicesServiceVersionIdFeaturesFeatureVersionIdVersionsQueryKey(service_version_id, feature_version_id)

  const query = useQuery(
    {
      ...(getServicesServiceVersionIdFeaturesFeatureVersionIdVersionsQueryOptions(
        service_version_id,
        feature_version_id,
        config,
      ) as unknown as QueryObserverOptions),
      queryKey,
      ...(queryOptions as unknown as Omit<QueryObserverOptions, 'queryKey'>),
    },
    queryClient,
  ) as UseQueryResult<
    TData,
    ResponseErrorConfig<
      | GetServicesServiceVersionIdFeaturesFeatureVersionIdVersions400
      | GetServicesServiceVersionIdFeaturesFeatureVersionIdVersions401
      | GetServicesServiceVersionIdFeaturesFeatureVersionIdVersions404
      | GetServicesServiceVersionIdFeaturesFeatureVersionIdVersions500
    >
  > & { queryKey: TQueryKey }

  query.queryKey = queryKey as TQueryKey

  return query
}