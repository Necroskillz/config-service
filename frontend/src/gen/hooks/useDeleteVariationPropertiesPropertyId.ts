/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '~/axios'
import type { UseMutationOptions, QueryClient } from '@tanstack/react-query'
import type {
  DeleteVariationPropertiesPropertyIdMutationResponse,
  DeleteVariationPropertiesPropertyIdPathParams,
  DeleteVariationPropertiesPropertyId400,
  DeleteVariationPropertiesPropertyId401,
  DeleteVariationPropertiesPropertyId403,
  DeleteVariationPropertiesPropertyId404,
  DeleteVariationPropertiesPropertyId500,
} from '../types/DeleteVariationPropertiesPropertyId.ts'
import type { RequestConfig, ResponseErrorConfig } from '~/axios'
import { useMutation } from '@tanstack/react-query'

export const deleteVariationPropertiesPropertyIdMutationKey = () => [{ url: '/variation-properties/{property_id}' }] as const

export type DeleteVariationPropertiesPropertyIdMutationKey = ReturnType<typeof deleteVariationPropertiesPropertyIdMutationKey>

/**
 * @description Delete a variation property
 * @summary Delete variation property
 * {@link /variation-properties/:property_id}
 */
export async function deleteVariationPropertiesPropertyId(
  property_id: DeleteVariationPropertiesPropertyIdPathParams['property_id'],
  config: Partial<RequestConfig> & { client?: typeof client } = {},
) {
  const { client: request = client, ...requestConfig } = config

  const res = await request<
    DeleteVariationPropertiesPropertyIdMutationResponse,
    ResponseErrorConfig<
      | DeleteVariationPropertiesPropertyId400
      | DeleteVariationPropertiesPropertyId401
      | DeleteVariationPropertiesPropertyId403
      | DeleteVariationPropertiesPropertyId404
      | DeleteVariationPropertiesPropertyId500
    >,
    unknown
  >({ method: 'DELETE', url: `/variation-properties/${property_id}`, ...requestConfig })
  return res.data
}

/**
 * @description Delete a variation property
 * @summary Delete variation property
 * {@link /variation-properties/:property_id}
 */
export function useDeleteVariationPropertiesPropertyId<TContext>(
  options: {
    mutation?: UseMutationOptions<
      DeleteVariationPropertiesPropertyIdMutationResponse,
      ResponseErrorConfig<
        | DeleteVariationPropertiesPropertyId400
        | DeleteVariationPropertiesPropertyId401
        | DeleteVariationPropertiesPropertyId403
        | DeleteVariationPropertiesPropertyId404
        | DeleteVariationPropertiesPropertyId500
      >,
      { property_id: DeleteVariationPropertiesPropertyIdPathParams['property_id'] },
      TContext
    > & { client?: QueryClient }
    client?: Partial<RequestConfig> & { client?: typeof client }
  } = {},
) {
  const { mutation = {}, client: config = {} } = options ?? {}
  const { client: queryClient, ...mutationOptions } = mutation
  const mutationKey = mutationOptions.mutationKey ?? deleteVariationPropertiesPropertyIdMutationKey()

  return useMutation<
    DeleteVariationPropertiesPropertyIdMutationResponse,
    ResponseErrorConfig<
      | DeleteVariationPropertiesPropertyId400
      | DeleteVariationPropertiesPropertyId401
      | DeleteVariationPropertiesPropertyId403
      | DeleteVariationPropertiesPropertyId404
      | DeleteVariationPropertiesPropertyId500
    >,
    { property_id: DeleteVariationPropertiesPropertyIdPathParams['property_id'] },
    TContext
  >(
    {
      mutationFn: async ({ property_id }) => {
        return deleteVariationPropertiesPropertyId(property_id, config)
      },
      mutationKey,
      ...mutationOptions,
    },
    queryClient,
  )
}