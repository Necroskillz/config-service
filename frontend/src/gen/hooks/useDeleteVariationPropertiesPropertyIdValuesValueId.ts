/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '~/axios'
import type {
  DeleteVariationPropertiesPropertyIdValuesValueIdMutationResponse,
  DeleteVariationPropertiesPropertyIdValuesValueIdPathParams,
  DeleteVariationPropertiesPropertyIdValuesValueId400,
  DeleteVariationPropertiesPropertyIdValuesValueId401,
  DeleteVariationPropertiesPropertyIdValuesValueId403,
  DeleteVariationPropertiesPropertyIdValuesValueId404,
  DeleteVariationPropertiesPropertyIdValuesValueId500,
} from '../types/DeleteVariationPropertiesPropertyIdValuesValueId.ts'
import type { UseMutationOptions, QueryClient } from '@tanstack/react-query'
import type { RequestConfig, ResponseErrorConfig } from '~/axios'
import { useMutation } from '@tanstack/react-query'

export const deleteVariationPropertiesPropertyIdValuesValueIdMutationKey = () => [{ url: '/variation-properties/{property_id}/values/{value_id}' }] as const

export type DeleteVariationPropertiesPropertyIdValuesValueIdMutationKey = ReturnType<typeof deleteVariationPropertiesPropertyIdValuesValueIdMutationKey>

/**
 * @description Delete a variation property value
 * @summary Delete variation property value
 * {@link /variation-properties/:property_id/values/:value_id}
 */
export async function deleteVariationPropertiesPropertyIdValuesValueId(
  property_id: DeleteVariationPropertiesPropertyIdValuesValueIdPathParams['property_id'],
  value_id: DeleteVariationPropertiesPropertyIdValuesValueIdPathParams['value_id'],
  config: Partial<RequestConfig> & { client?: typeof client } = {},
) {
  const { client: request = client, ...requestConfig } = config

  const res = await request<
    DeleteVariationPropertiesPropertyIdValuesValueIdMutationResponse,
    ResponseErrorConfig<
      | DeleteVariationPropertiesPropertyIdValuesValueId400
      | DeleteVariationPropertiesPropertyIdValuesValueId401
      | DeleteVariationPropertiesPropertyIdValuesValueId403
      | DeleteVariationPropertiesPropertyIdValuesValueId404
      | DeleteVariationPropertiesPropertyIdValuesValueId500
    >,
    unknown
  >({ method: 'DELETE', url: `/variation-properties/${property_id}/values/${value_id}`, ...requestConfig })
  return res.data
}

/**
 * @description Delete a variation property value
 * @summary Delete variation property value
 * {@link /variation-properties/:property_id/values/:value_id}
 */
export function useDeleteVariationPropertiesPropertyIdValuesValueId<TContext>(
  options: {
    mutation?: UseMutationOptions<
      DeleteVariationPropertiesPropertyIdValuesValueIdMutationResponse,
      ResponseErrorConfig<
        | DeleteVariationPropertiesPropertyIdValuesValueId400
        | DeleteVariationPropertiesPropertyIdValuesValueId401
        | DeleteVariationPropertiesPropertyIdValuesValueId403
        | DeleteVariationPropertiesPropertyIdValuesValueId404
        | DeleteVariationPropertiesPropertyIdValuesValueId500
      >,
      {
        property_id: DeleteVariationPropertiesPropertyIdValuesValueIdPathParams['property_id']
        value_id: DeleteVariationPropertiesPropertyIdValuesValueIdPathParams['value_id']
      },
      TContext
    > & { client?: QueryClient }
    client?: Partial<RequestConfig> & { client?: typeof client }
  } = {},
) {
  const { mutation = {}, client: config = {} } = options ?? {}
  const { client: queryClient, ...mutationOptions } = mutation
  const mutationKey = mutationOptions.mutationKey ?? deleteVariationPropertiesPropertyIdValuesValueIdMutationKey()

  return useMutation<
    DeleteVariationPropertiesPropertyIdValuesValueIdMutationResponse,
    ResponseErrorConfig<
      | DeleteVariationPropertiesPropertyIdValuesValueId400
      | DeleteVariationPropertiesPropertyIdValuesValueId401
      | DeleteVariationPropertiesPropertyIdValuesValueId403
      | DeleteVariationPropertiesPropertyIdValuesValueId404
      | DeleteVariationPropertiesPropertyIdValuesValueId500
    >,
    {
      property_id: DeleteVariationPropertiesPropertyIdValuesValueIdPathParams['property_id']
      value_id: DeleteVariationPropertiesPropertyIdValuesValueIdPathParams['value_id']
    },
    TContext
  >(
    {
      mutationFn: async ({ property_id, value_id }) => {
        return deleteVariationPropertiesPropertyIdValuesValueId(property_id, value_id, config)
      },
      mutationKey,
      ...mutationOptions,
    },
    queryClient,
  )
}