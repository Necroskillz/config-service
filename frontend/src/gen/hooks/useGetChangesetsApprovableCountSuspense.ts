/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '~/axios'
import type {
  GetChangesetsApprovableCountQueryResponse,
  GetChangesetsApprovableCount401,
  GetChangesetsApprovableCount500,
} from '../types/GetChangesetsApprovableCount.ts'
import type { QueryKey, QueryClient, UseSuspenseQueryOptions, UseSuspenseQueryResult } from '@tanstack/react-query'
import type { RequestConfig, ResponseErrorConfig } from '~/axios'
import { queryOptions, useSuspenseQuery } from '@tanstack/react-query'

export const getChangesetsApprovableCountSuspenseQueryKey = () => [{ url: '/changesets/approvable-count' }] as const

export type GetChangesetsApprovableCountSuspenseQueryKey = ReturnType<typeof getChangesetsApprovableCountSuspenseQueryKey>

/**
 * @description Get the number of approvable changesets
 * @summary Get the number of approvable changesets
 * {@link /changesets/approvable-count}
 */
export async function getChangesetsApprovableCountSuspense(config: Partial<RequestConfig> & { client?: typeof client } = {}) {
  const { client: request = client, ...requestConfig } = config

  const res = await request<
    GetChangesetsApprovableCountQueryResponse,
    ResponseErrorConfig<GetChangesetsApprovableCount401 | GetChangesetsApprovableCount500>,
    unknown
  >({ method: 'GET', url: `/changesets/approvable-count`, ...requestConfig })
  return res.data
}

export function getChangesetsApprovableCountSuspenseQueryOptions(config: Partial<RequestConfig> & { client?: typeof client } = {}) {
  const queryKey = getChangesetsApprovableCountSuspenseQueryKey()
  return queryOptions<
    GetChangesetsApprovableCountQueryResponse,
    ResponseErrorConfig<GetChangesetsApprovableCount401 | GetChangesetsApprovableCount500>,
    GetChangesetsApprovableCountQueryResponse,
    typeof queryKey
  >({
    queryKey,
    queryFn: async ({ signal }) => {
      config.signal = signal
      return getChangesetsApprovableCountSuspense(config)
    },
  })
}

/**
 * @description Get the number of approvable changesets
 * @summary Get the number of approvable changesets
 * {@link /changesets/approvable-count}
 */
export function useGetChangesetsApprovableCountSuspense<
  TData = GetChangesetsApprovableCountQueryResponse,
  TQueryKey extends QueryKey = GetChangesetsApprovableCountSuspenseQueryKey,
>(
  options: {
    query?: Partial<
      UseSuspenseQueryOptions<
        GetChangesetsApprovableCountQueryResponse,
        ResponseErrorConfig<GetChangesetsApprovableCount401 | GetChangesetsApprovableCount500>,
        TData,
        TQueryKey
      >
    > & { client?: QueryClient }
    client?: Partial<RequestConfig> & { client?: typeof client }
  } = {},
) {
  const { query: { client: queryClient, ...queryOptions } = {}, client: config = {} } = options ?? {}
  const queryKey = queryOptions?.queryKey ?? getChangesetsApprovableCountSuspenseQueryKey()

  const query = useSuspenseQuery(
    {
      ...(getChangesetsApprovableCountSuspenseQueryOptions(config) as unknown as UseSuspenseQueryOptions),
      queryKey,
      ...(queryOptions as unknown as Omit<UseSuspenseQueryOptions, 'queryKey'>),
    },
    queryClient,
  ) as UseSuspenseQueryResult<TData, ResponseErrorConfig<GetChangesetsApprovableCount401 | GetChangesetsApprovableCount500>> & { queryKey: TQueryKey }

  query.queryKey = queryKey as TQueryKey

  return query
}