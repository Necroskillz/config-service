/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '~/axios'
import type { UseMutationOptions, QueryClient } from '@tanstack/react-query'
import type {
  DeleteServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdMutationResponse,
  DeleteServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdPathParams,
  DeleteServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyId400,
  DeleteServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyId401,
  DeleteServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyId403,
  DeleteServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyId404,
  DeleteServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyId500,
} from '../types/DeleteServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyId.ts'
import type { RequestConfig, ResponseErrorConfig } from '~/axios'
import { useMutation } from '@tanstack/react-query'

export const deleteServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdMutationKey = () =>
  [{ url: '/services/{service_version_id}/features/{feature_version_id}/keys/{key_id}' }] as const

export type DeleteServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdMutationKey = ReturnType<
  typeof deleteServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdMutationKey
>

/**
 * @description Delete a key
 * @summary Delete a key
 * {@link /services/:service_version_id/features/:feature_version_id/keys/:key_id}
 */
export async function deleteServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyId(
  service_version_id: DeleteServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdPathParams['service_version_id'],
  feature_version_id: DeleteServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdPathParams['feature_version_id'],
  key_id: DeleteServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdPathParams['key_id'],
  config: Partial<RequestConfig> & { client?: typeof client } = {},
) {
  const { client: request = client, ...requestConfig } = config

  const res = await request<
    DeleteServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdMutationResponse,
    ResponseErrorConfig<
      | DeleteServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyId400
      | DeleteServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyId401
      | DeleteServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyId403
      | DeleteServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyId404
      | DeleteServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyId500
    >,
    unknown
  >({ method: 'DELETE', url: `/services/${service_version_id}/features/${feature_version_id}/keys/${key_id}`, ...requestConfig })
  return res.data
}

/**
 * @description Delete a key
 * @summary Delete a key
 * {@link /services/:service_version_id/features/:feature_version_id/keys/:key_id}
 */
export function useDeleteServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyId<TContext>(
  options: {
    mutation?: UseMutationOptions<
      DeleteServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdMutationResponse,
      ResponseErrorConfig<
        | DeleteServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyId400
        | DeleteServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyId401
        | DeleteServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyId403
        | DeleteServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyId404
        | DeleteServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyId500
      >,
      {
        service_version_id: DeleteServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdPathParams['service_version_id']
        feature_version_id: DeleteServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdPathParams['feature_version_id']
        key_id: DeleteServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdPathParams['key_id']
      },
      TContext
    > & { client?: QueryClient }
    client?: Partial<RequestConfig> & { client?: typeof client }
  } = {},
) {
  const { mutation: { client: queryClient, ...mutationOptions } = {}, client: config = {} } = options ?? {}
  const mutationKey = mutationOptions?.mutationKey ?? deleteServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdMutationKey()

  return useMutation<
    DeleteServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdMutationResponse,
    ResponseErrorConfig<
      | DeleteServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyId400
      | DeleteServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyId401
      | DeleteServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyId403
      | DeleteServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyId404
      | DeleteServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyId500
    >,
    {
      service_version_id: DeleteServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdPathParams['service_version_id']
      feature_version_id: DeleteServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdPathParams['feature_version_id']
      key_id: DeleteServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyIdPathParams['key_id']
    },
    TContext
  >(
    {
      mutationFn: async ({ service_version_id, feature_version_id, key_id }) => {
        return deleteServicesServiceVersionIdFeaturesFeatureVersionIdKeysKeyId(service_version_id, feature_version_id, key_id, config)
      },
      mutationKey,
      ...mutationOptions,
    },
    queryClient,
  )
}