/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '~/axios'
import type { UseMutationOptions, QueryClient } from '@tanstack/react-query'
import type {
  PutVariationPropertiesPropertyIdValuesValueIdOrderMutationRequest,
  PutVariationPropertiesPropertyIdValuesValueIdOrderMutationResponse,
  PutVariationPropertiesPropertyIdValuesValueIdOrderPathParams,
  PutVariationPropertiesPropertyIdValuesValueIdOrder400,
  PutVariationPropertiesPropertyIdValuesValueIdOrder401,
  PutVariationPropertiesPropertyIdValuesValueIdOrder403,
  PutVariationPropertiesPropertyIdValuesValueIdOrder404,
  PutVariationPropertiesPropertyIdValuesValueIdOrder500,
} from '../types/PutVariationPropertiesPropertyIdValuesValueIdOrder.ts'
import type { RequestConfig, ResponseErrorConfig } from '~/axios'
import { useMutation } from '@tanstack/react-query'

export const putVariationPropertiesPropertyIdValuesValueIdOrderMutationKey = () =>
  [{ url: '/variation-properties/{property_id}/values/{value_id}/order' }] as const

export type PutVariationPropertiesPropertyIdValuesValueIdOrderMutationKey = ReturnType<typeof putVariationPropertiesPropertyIdValuesValueIdOrderMutationKey>

/**
 * @description Update variation property value order
 * @summary Update variation property value order
 * {@link /variation-properties/:property_id/values/:value_id/order}
 */
export async function putVariationPropertiesPropertyIdValuesValueIdOrder(
  property_id: PutVariationPropertiesPropertyIdValuesValueIdOrderPathParams['property_id'],
  value_id: PutVariationPropertiesPropertyIdValuesValueIdOrderPathParams['value_id'],
  data: PutVariationPropertiesPropertyIdValuesValueIdOrderMutationRequest,
  config: Partial<RequestConfig<PutVariationPropertiesPropertyIdValuesValueIdOrderMutationRequest>> & { client?: typeof client } = {},
) {
  const { client: request = client, ...requestConfig } = config

  const res = await request<
    PutVariationPropertiesPropertyIdValuesValueIdOrderMutationResponse,
    ResponseErrorConfig<
      | PutVariationPropertiesPropertyIdValuesValueIdOrder400
      | PutVariationPropertiesPropertyIdValuesValueIdOrder401
      | PutVariationPropertiesPropertyIdValuesValueIdOrder403
      | PutVariationPropertiesPropertyIdValuesValueIdOrder404
      | PutVariationPropertiesPropertyIdValuesValueIdOrder500
    >,
    PutVariationPropertiesPropertyIdValuesValueIdOrderMutationRequest
  >({ method: 'PUT', url: `/variation-properties/${property_id}/values/${value_id}/order`, data, ...requestConfig })
  return res.data
}

/**
 * @description Update variation property value order
 * @summary Update variation property value order
 * {@link /variation-properties/:property_id/values/:value_id/order}
 */
export function usePutVariationPropertiesPropertyIdValuesValueIdOrder<TContext>(
  options: {
    mutation?: UseMutationOptions<
      PutVariationPropertiesPropertyIdValuesValueIdOrderMutationResponse,
      ResponseErrorConfig<
        | PutVariationPropertiesPropertyIdValuesValueIdOrder400
        | PutVariationPropertiesPropertyIdValuesValueIdOrder401
        | PutVariationPropertiesPropertyIdValuesValueIdOrder403
        | PutVariationPropertiesPropertyIdValuesValueIdOrder404
        | PutVariationPropertiesPropertyIdValuesValueIdOrder500
      >,
      {
        property_id: PutVariationPropertiesPropertyIdValuesValueIdOrderPathParams['property_id']
        value_id: PutVariationPropertiesPropertyIdValuesValueIdOrderPathParams['value_id']
        data: PutVariationPropertiesPropertyIdValuesValueIdOrderMutationRequest
      },
      TContext
    > & { client?: QueryClient }
    client?: Partial<RequestConfig<PutVariationPropertiesPropertyIdValuesValueIdOrderMutationRequest>> & { client?: typeof client }
  } = {},
) {
  const { mutation: { client: queryClient, ...mutationOptions } = {}, client: config = {} } = options ?? {}
  const mutationKey = mutationOptions?.mutationKey ?? putVariationPropertiesPropertyIdValuesValueIdOrderMutationKey()

  return useMutation<
    PutVariationPropertiesPropertyIdValuesValueIdOrderMutationResponse,
    ResponseErrorConfig<
      | PutVariationPropertiesPropertyIdValuesValueIdOrder400
      | PutVariationPropertiesPropertyIdValuesValueIdOrder401
      | PutVariationPropertiesPropertyIdValuesValueIdOrder403
      | PutVariationPropertiesPropertyIdValuesValueIdOrder404
      | PutVariationPropertiesPropertyIdValuesValueIdOrder500
    >,
    {
      property_id: PutVariationPropertiesPropertyIdValuesValueIdOrderPathParams['property_id']
      value_id: PutVariationPropertiesPropertyIdValuesValueIdOrderPathParams['value_id']
      data: PutVariationPropertiesPropertyIdValuesValueIdOrderMutationRequest
    },
    TContext
  >(
    {
      mutationFn: async ({ property_id, value_id, data }) => {
        return putVariationPropertiesPropertyIdValuesValueIdOrder(property_id, value_id, data, config)
      },
      mutationKey,
      ...mutationOptions,
    },
    queryClient,
  )
}